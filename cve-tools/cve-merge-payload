#!/usr/bin/python

import sys
import re

re_package = re.compile('<h2.*?>(.*?)</h2>')
re_headings = re.compile('<tr>.*?<th>')
re_cve = re.compile('(<tr class=".*?">).*?(<td class="cve">.*?>(CVE-....-....)</a></td>)')

re_th = re.compile('<th.*?>(.*?)</th>')
re_td = re.compile('<td.*?>(.*?)</td>')

packages = list()
# headers[package] = [ ... ]
headers = {}
# cves[cve_num] = [ priority, html_title ]
cves = {}
# cve_status[package, cve_num]
cve_status = {}
# missing[$package] = "...."
missing = {}
# valid[package_name] = [ ... ]
valid = {}
# summary[package] = [ ... ]
summary = {}

html = ''

for filename in sys.argv[1:]:
    package_name = None
    with file(filename) as fh:
        for line in fh:
            # Pick out the package name ...
            match = re_package.search(line)
            if match:
                package_name = match.group(1)
                packages.append(package_name)

            # Pick out the headers ...
            match = re_headings.search(line)
            if match:
                if package_name not in headers:
                    headers[package_name] = []
                for hmatch in re_th.finditer(line):
                    h = "<th class=\"allborders\">" + hmatch.group(1) + "</th>"
                    headers[package_name].append(h)
                headers[package_name].pop(0)

            # Pick out CVE entries ...
            match = re_cve.search(line)
            if match:
                cve_num = match.group(3)
                cves[cve_num] = (match.group(1), match.group(2))

                if (package_name, cve_num) not in cve_status:
                    cve_status[package_name, cve_num] = list()
                cnt = -1
                for tmatch in re_td.finditer(line):
                    cve_status[package_name, cve_num].append(tmatch.group(0))
                    # Record valid entries ...
                    if tmatch.group(1) not in ('--', 'ignored'):
                        if package_name not in valid:
                            valid[package_name] = {}
                        if cnt >= 0:
                            valid[package_name][cnt] = True
                            if package_name not in summary:
                                summary[package_name] = {}
                            if cnt not in summary[package_name]:
                                summary[package_name][cnt] = 0
                    # Count open entries ...
                    if tmatch.group(1) in ('needs-triage', 'needed'):
                        summary[package_name][cnt] += 1
                    cnt += 1
                cve_status[package_name, cve_num].pop(0)

# Drop any columns which have no valid data
for package_name in packages:
    new = list()
    for cnt in range(0, len(headers[package_name])):
        if package_name in valid and cnt in valid[package_name]:
            new.append(headers[package_name][cnt])
    headers[package_name] = new

for package_name in packages:
    missing[package_name] = "<td></td>" * len(headers[package_name])

html +=  "<tr><th class=\"allborders\"></th>"
for package_name in packages:
    html += '<th class=\"allborders\" colspan="%d">%s</th>' % (len(headers[package_name]), package_name)
html += "</tr>\n"

html += "<tr><th class=\"allborders\">CVE</th>"
for package_name in packages:
    html += "".join(headers[package_name])
html += "</tr>\n"

for cve_num in sorted(cves):
    html += "%s%s" % (cves[cve_num][0], cves[cve_num][1])
    for package_name in packages:
        if (package_name, cve_num) in cve_status:
            cnt = 0
            for cell in cve_status[package_name, cve_num]:
                if package_name in valid and cnt in valid[package_name]:
                    html += cell
                cnt += 1
        else:
            html += missing[package_name]
    html += "</tr>\n"

html += "<tr><th class=\"allborders\">Open (of %d)</th>" % (len(cves))
for package_name in packages:
    for cnt in sorted(summary[package_name].keys()):
        html += "<th class=\"allborders\">%d</th>" % (summary[package_name][cnt])
html += "</tr>\n"

html += "<tr><th></th>"
for package_name in packages:
    html += '<th  class=\"allborders\" colspan="%d">%s</th>' % (len(headers[package_name]), package_name)
html += "</tr>\n"

html +=  "<tr><th class=\"allborders\">CVE</th>"
for package_name in packages:
    html += "".join(headers[package_name])
html += "</tr>\n"

print html
