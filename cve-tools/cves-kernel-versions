#!/usr/bin/python

# Copyright (C) 2009-2013  Canonical Ltd.
# Authors:
#   Andy Whitcroft <apw@canonical.com>
# Based on sru-report by:
#   Martin Pitt <martin.pitt@ubuntu.com>
#   Jean-Baptiste Lallement <jean-baptiste.lallement@canonical.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

from __future__ import print_function

import logging
import os
import sys

import apt_pkg

from ktl.kernel_versions import KernelVersions


if __name__ == "__main__":
    if os.getenv('DEBUG'):
        DEBUGLEVEL = logging.DEBUG
    else:
        DEBUGLEVEL = logging.WARNING

    logging.basicConfig(level=DEBUGLEVEL,
                        format="%(asctime)s - %(levelname)s - %(message)s")
    (mode, series, source) = sys.argv[1:4]

    kv = KernelVersions(active_only=False)
    ppa = kv.ppa('canonical-kernel-team', 'ppa')

    if mode == 'tags':
        tags = kv.all_viable(series, source)

        # If we have a newer tag in the CKT PPA treat it like a Proposed version
        pockets = ppa.pocket_data(series, source)
        ppa_release = pockets.current_in_pocket('release', infer_release=True)
        if ppa_release and apt_pkg.version_compare(tags[len(tags) - 1], ppa_release) < 0:
            tags.append(ppa_release)
        
        print("\n".join(tags))

    elif mode == 'release-updates':
        pockets = kv.pocket_data(series, source)
        release = pockets.current_in_pocket('release', infer_release=True)
        updates = pockets.current_in_pocket('updates')
        print(release, updates)

    elif mode == 'cve-pockets':
        pockets = kv.pocket_data(series, source)
        release = pockets.current_in_pocket('release', infer_release=True)
        security = pockets.current_in_pocket('security')
        updates = pockets.current_in_pocket('updates')
        proposed = pockets.current_in_pocket('proposed')

        pockets = ppa.pocket_data(series, source)
        ppa_release = pockets.current_in_pocket('release', infer_release=True)

        print(release, security, updates, proposed, ppa_release)

    elif mode in ('release', 'security', 'updates', 'proposed'):
        print(kv.current_in_pocket(mode, series, source))
