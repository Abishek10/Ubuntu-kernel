#!/bin/bash

repos="$HOME/git2"

refresh=0
case "$1" in
--refresh)	refresh=1; shift ;;
esac

if [ "$#" -lt 1 ]; then
	echo "Usage: $0 [--refresh] <sha1> ..." 1>&2
	exit 1
fi
sha1="$1"

linus_tag=`(cd "$repos/linux-linus" && git describe --contains "$sha1")`
release=`echo "$linus_tag" | sed -e 's/v2\.6\./2.6./'`
echo "linus master - $release" 

while read series base branch tags
do
	#[ "$branch" != "master-next" ] && continue
	(
		cd "$repos/ubuntu-$series" || exit 1
		if [ "$refresh" -eq 1 -o ! -f ".cve-$branch" ]; then
			if [ "$branch" = 'master-next' ]; then
				git fetch origin
			fi
			git log "origin/$branch" >".cve-$branch"
		fi
		if grep -q "$sha1" ".cve-$branch"; then
			commit_release=`<".cve-$branch" perl -e '
				my $commit = "";
				my $release = "pending";
				my $result;
				my $sha1 = $ARGV[0];
				my %find = ();
				my $cnt = 0;
				my @was = ();
				for my $arg (@ARGV) {
					$find{$arg} = 1;
					$cnt++;
				}
				while (<STDIN>) {
					if (/^commit\s([a-f0-9]{40})/) {		
						$commit = $1;
					} elsif (/^\s*UBUNTU: Ubuntu-(2.6.\S*)/) {
						$release = $1;
					}
					if (/\b([a-f0-9]{40})\b/) {
						if (defined $find{$1}) {
							delete $find{$1};
							push(@was, $commit);
							$cnt--;
							if ($result eq "") {
								$result = $release;
							}
							if ($cnt == 0) {
								print join(",", @was) . " $result\n";
								last;
							}
						}
					}
				}
			' -- "$@"`
		fi
		read commit release <<EOM
$commit_release
EOM
		if [ "$commit" != "" -a "$tags" != "" ]; then
#			for tag in `git tag -l $tags`
#			do
#				map=`based-on "$tag"`
#				case "$map" in
#				*-$release|*-$release[\+\?])	break ;;
#				esac
#				map=''
#			done
#			if [ "$map" != "" ]; then
#				release=`echo "$map" | sed -e 's/Ubuntu-//g'`
#			fi
			first="${commit%%,*}"
			for tag in $tags
			do
				map=`git describe --match $tag --contains "$first" 2>/dev/null`
				if [ "$map" != "" ]; then
					release=`echo "$map" | sed -e 's/Ubuntu.*-2\.6\./2.6./g'`
					break
				fi
			done
		fi
		# Look to see the base version of linux onto which the _first_
		# version in this series was based.
		oldest_tag=`git tag -l $tags | head -1`
		linus_base=`git cat-file -p "$oldest_tag":Makefile | \
			awk '
				/^VERSION = /		{ v=$3 }
				/^PATCHLEVEL = /	{ p=$3 }
				/^SUBLEVEL = /		{ s=$3 }
				/^EXTRAVERSION = -/	{ e=$3 }
				END			{ print "v" v "." p "." s e }
			'`
		#echo "LB<$linus_base>"

		linus_date=`(cd "$repos/linux-linus" && git log --pretty=format:%ct "$linus_tag^..$linus_tag")`
		base_date=`(cd "$repos/linux-linus" && git log --pretty=format:%ct "$linus_base^..$linus_base")`

		#echo "LS<$linus_date> BS<$base_date>"
		if [ "$linus_date" -lt "$base_date" ]; then
			release='not-affected'
		fi
				
		echo "$series $branch $commit $release"
	)
done <<EOB
dapper v2.6.15 master-next Ubuntu-2.6.15-*.*
hardy v2.6.24 master-next Ubuntu-2.6.24-*.*
lucid v2.6.32 master-next Ubuntu-2.6.32-?.* Ubuntu-2.6.32-??.*
lucid v2.6.32 ec2 Ubuntu-2.6.32-3??.*
lucid v2.6.32 mvl-dove Ubuntu-2.6.32-2??.*
lucid v2.6.32 fsl-imx51 Ubuntu-2.6.31-6??.*
lucid v2.6.35 lts-backport-maverick Ubuntu-lts-2.6.35-*.*
maverick v2.6.35 master-next
maverick v2.6.35 mvl-dove Ubuntu-mvl-dove-2.6.32-4??.*
maverick v2.6.35 ti-omap4 Ubuntu-2.6.35-9??.*
natty v2.6.35 master-next Ubuntu-2.6.37-?.* Ubuntu-2.6.37-??.* Ubuntu-2.6.38-?.* Ubuntu-2.6.38-??.*
natty v2.6.35 ti-omap4 Ubuntu-2.6.38-12??.*
oneiric v2.6.38 master-next Ubuntu-2.6.39-?.* Ubuntu-2.6.39-??.*
EOB
