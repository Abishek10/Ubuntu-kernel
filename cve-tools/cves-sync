#!/bin/bash

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

repos="$HOME/cve-autotriage"

cache="$1"
overlay="$2"
shift 2

case "$overlay" in
/*) ;;
*)  overlay="`pwd`/$overlay" ;;
esac
shift

tag_cache="$cache/tag-version"
mkdir -p "$tag_cache"

cve_list_cache="$cache/CVE-list"
cves_changed=1

cve_list="/tmp/cve-commits.$$"
branch_id="/tmp/cve-branch.$$"
{
	echo "*** enumerating cve commits ..." 1>&2
	"$here/cves-commits" "$@" >"$cve_list"

	if [ -f "$cve_list_cache" ]; then
		if cmp -s "$cve_list_cache" "$cve_list"; then
			cves_changed=0
			echo "NOTE: CVE list unchanged" 1>&2
		else
			echo "NOTE: CVE list changed" 1>&2
		fi
	fi

	echo "*** checking linus master ..." 1>&2
	(
		cd "$repos/linux-linus" || exit 1
		git fetch origin 1>&2
		{
			git show origin/master | head -1
			git tag -l
			cat "$overlay" | md5sum
		} >"$branch_id"
		state="$cache/linux-linus"
		branch_changed=1
		if [ -f "$state" ] && cmp -s "$state" "$branch_id"; then
			branch_changed=0
		fi
		if [ "$cves_changed" = 1 -o "$branch_changed" = 1 ]; then
			echo "NOTE: linux-linus changed" 1>&2
			"$here/cves-applied" <"$cve_list" "$overlay" 'linus master' \
				$("$here/cves-git-tags-order" \
					`git tag -l 'v*' | grep -v v2.6.11 | \
						awk '{
							x=$1;
							sub("^v", "", x);
							gsub("-rc", "~rc", x);
							print $1 " " x
						}'
					`
				) "master" "pending" | \
				tee "$state+cache"
			mv "$branch_id" "$state"
		else
			echo "NOTE: linux-linus unchanged" 1>&2
			cat "$state+cache"
		fi
	)

	prev_repo=""
	while read series cvebranch repo branch
	do
		echo "*** checking $series $cvebranch ... " 1>&2
		(
			cd "$repos/$repo" || exit 1
			[ "$prev_repo" != "$repo" ] && git fetch --tags origin 1>&2
			tag_list=`"$here/cves-git-tags-versions" "$tag_cache" $("$here/cves-kernel-versions" "$series" "$cvebranch")`
			{
				git show "origin/$branch" | head -1
				echo "$tag_list"
				cat "$overlay" | md5sum
			} >"$branch_id"
			state="$cache/$series-$cvebranch--$repo-$branch"
			branch_changed=1
			if [ -f "$state" ] && cmp -s "$state" "$branch_id"; then
				branch_changed=0
			fi
			if [ "$cves_changed" = 1 -o "$branch_changed" = 1 ]; then
				echo "NOTE: $series $branch changed" 1>&2
				"$here/cves-applied" <"$cve_list" "$overlay" \
					"$series $cvebranch" \
					$tag_list "origin/$branch" "pending" | \
					tee "$state+cache"

				mv "$branch_id" "$state"
			else
				echo "NOTE: $series $cvebranch unchanged" 1>&2
				cat "$state+cache"
			fi
		)
		prev_repo="$repo"
	done <<EOB
lucid linux ubuntu-lucid master-next
lucid linux-ec2 ubuntu-lucid ec2
lucid linux-fsl-imx51 ubuntu-lucid fsl-imx51
precise linux ubuntu-precise master-next
precise linux-ti-omap4 ubuntu-precise ti-omap4
precise linux-armadaxp ubuntu-precise-armadaxp master
precise linux-lts-quantal ubuntu-precise lts-backport-quantal
precise linux-lts-raring ubuntu-precise lts-backport-raring
quantal linux ubuntu-quantal master-next
quantal linux-ti-omap4 ubuntu-quantal ti-omap4
quantal linux-armadaxp ubuntu-quantal-armadaxp master
raring linux ubuntu-raring master-next
raring linux-ti-omap4 ubuntu-quantal ti-omap4
saucy linux ubuntu-saucy master-next
EOB
}

mv "$cve_list" "$cve_list_cache"
rm -f "$cve_list" "$branch_id"
