#!/bin/bash
#==============================================================================
# This script is used to display the verbose status of a kernel build. It
# would normally not be called directly because it depends on many things
# defined in the build status file.
#==============================================================================
if [ "$DIR" = "" ]; then
	echo "DIR is not set" >&2
	exit 1
fi
if [ ! -d "$DIR" ]; then
	echo "$DIR not found" >&2
	exit 1
fi

FLAVOURS=""
if [ -f "$DIR/debian/stamps/stamp-flavours" ]; then
	for i in $(cat "$DIR/debian/stamps/stamp-flavours"); do
		FLAVOURS="$FLAVOURS $i"
	done
fi

case "$ACTION" in
	prepare)
		echo "Q: [setup] headers$FLAVOURS"
		echo "D:"
		exit 0
		;;
	headers)
		echo "Q: [headers]$FLAVOURS"
		echo "D:"
		exit 0
		;;
	*)
		;;
esac

BUILD=""
WAIT=""
DONE=""
SF="$DIR/debian/stamps/stamp"
BF="$DIR/debian/build/build"
for F in $FLAVOURS; do
	if [ ! -f "$SF-prepare-$F" -a ! -f "$SF-custom-prepare-$F" ]; then
		WAIT="$WAIT $F"
		continue
	fi
	if [ "$(ls -1 $PKGPREFIX${F}_* 2>/dev/null)" != "" ]; then
		DONE="$DONE $F"
		continue
	fi
	if [ -f "$SF-build-$F" -o -f "$SF-custom-build-$F" ]; then
		BUILD="$F(packaging)"
		continue
	fi
	if [ -f "$BF-$F/vmlinux" -o "$BF-custum-$F/vmlinux" ]; then
		BUILD="$F(modules)"
		continue
	fi
	BUILD="$F(kernel)"
done

LINE="Q:"
if [ "$BUILD" != "" ]; then
	LINE="$LINE $BUILD"
fi
for i in $WAIT; do
	LINE="$LINE $i"
done
echo $LINE
LINE="D: headers"
for i in $DONE; do
	LINE="$LINE $i"
done
echo $LINE

