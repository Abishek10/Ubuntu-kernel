#!/usr/bin/perl

use strict;

if ($#ARGV != 3) {
	die "Usage: $0 <defaults> <experimental> <staging> <overrides>\n";
}

my ($defaults, $experimental, $staging, $overrides) = @ARGV;
my %options;

my ($option, $maybe, $default);
open(DEFAULTS, "<$defaults") || die "$0: $defaults: open failed - $!\n";
while (<DEFAULTS>) {
	chomp;

	($option, $maybe, $default) = split(' ');

	# Create the 'expected' column.
	$options{$option} = join(' ', ($maybe, $default, $default));
}
close(DEFAULTS);

my @oa;
open(EXPERIMENTAL, "<$experimental") ||
	die "$0: $experimental: open failed - $!\n";
while (<EXPERIMENTAL>) {
	chomp;

	@oa = split(' ', $options{$_});
	# We default EXPERIMENTAL options off by default.
	@oa[2] = 'n';
	push(@oa, "flag<EXPERIMENTAL>");

	$options{$_} = join(' ', @oa);
}
close(EXPERIMENTAL);

open(STAGING, "<$staging") ||
	die "$0: $staging: open failed - $!\n";
while (<STAGING>) {
	chomp;

	$options{$_} .= " flag<STAGING>";
}
close(STAGING);

my @ea;
my @oa;
open(OVERRIDES, "<$overrides") ||
	die "$0: $overrides: open failed - $!\n";
while (<OVERRIDES>) {
	chomp;

	next if ($_ =~ /^$/ || $_ =~ /^#/);

	@ea = split(' ');

	@oa = split(' ', $options{$ea[0]});

	# Set the option to the specified value and add any other options
	if ($oa[2] ne $ea[1]) {
		push(@oa, "flag<policy=$ea[1]>");
	}
	$oa[2] = $ea[1];
	push(@oa, @ea[2..$#ea]);

	$options{$ea[0]} = join(' ', @oa);
}
close(OVERRIDES);

foreach my $key (sort keys %options) {
	print "$key $options{$key}\n";
}
