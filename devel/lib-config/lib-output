#!/bin/bash

out__format='wiki'
output_format() {
	out__format="$1"
}
out__configs=''
output_configs() {
	out__configs="$1"
}
out__info=''
output_info() {
	out__info="$1"
}

function rebuild() {
	local what="$1"
	local not="$2"
	local out
	rm -f "tmp/*" "tmp/.required"

	[ "$not" = "" ] && not="^NOT_VALID"

	for i in `ls -1 "$configs"`

	do
		out=`echo "$i" | sed -e 's/config\.flavour\.//'`
		egrep -h "$what" "$configs/$i" | egrep -h -v "$not" | \
			sort >"tmp/$out"
	done
}
function config-cmp() {
	(cd tmp; "$here/config-compare" --format "$out__format" --info "../$out__info" $@ *)
}
function config-cmp-nopolicy() {
	(cd tmp; "$here/config-compare" --format "$out__format" --no-policy --info "../$out__info" $@ *)
}
function config-cmp-interesting() {
	(cd tmp; "$here/config-compare" --format "$out_format" \
		--info "../$out__info" $@ *) | grep -v '||  ||$'
	(cd tmp; "$here/config-compare" --format "$out_format" \
		--info "../$out__info" $@ *) | grep '||  ||$'
}

level='===='
output_header() {
	local header="$1"

	case "$out__format" in
	wiki|text)	
		echo ""
		echo "$level $header $level"
		;;
	html)
		echo "<h2>$header</h2>"
		;;
	esac
}
output_footer() {
	case "$out__format" in
	wiki|text)	
		echo ""
		;;
	esac
}

list_core() {
	local variant="$1"
	local flags="$2"
	local title="$3"
	local what="$4"
	local not="$5"

	rebuild "$what" "$not"
	output_header "$title"
	config-cmp$variant --colour $flags $cmp
	output_footer "$title"
}
list_interesting() {
	list_core "-interesting" "" "$@"
}
list_sort() {
	list_core "" "--sort" "$@"
}
list() {
	list_core "" "" "$@"
}
