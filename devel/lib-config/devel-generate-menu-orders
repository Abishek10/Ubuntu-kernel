#!/bin/bash

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

if [ "$#" -ne 5 ]; then
	echo "Usage: $0 <format> <info> <config directory> <base> <prefix>" 1>&2
	exit 1
fi
format="$1"
info="$2"
configs="$3"
base="$4"
prefix="$5"

. "$here/lib-output"

output_format "$format"
output_info "$info"
output_configs "$configs"

: >"$prefix.$format"
: >"$prefix-issues.$format"

function what_menu()
{
        typeset list="$1"
        typeset menu="$2"

        what=`cat "$list" | grep "^E $menu>>>" | 
		awk -F'>' '{ print $NF }' |
		tr '\n' '|' | sed -e 's/^/CONFIG_(/' -e 's/|$/)[ =]/'`
}
#		tr '\n' '|' | sed -e 's/^/CONFIG_(/' -e 's/|$/)[ 	]/'`

function list_menu()
{
        what_menu "$list" "$2"
	if ! list_worthy "$1" "$what" "$3" >"$prefix.menu"; then
		cat "$prefix.menu" >>"$prefix-issues.$format"
	fi
	cat "$prefix.menu" >>"$prefix.$format"
	rm -f "$prefix.menu"
}

rm -rf tmp
mkdir -p tmp

list="/tmp/list.$$"
{
	echo "M ROOT"
	"$here/devel-config-tree" "$base" arch/x86/Kconfig genorder
	"$here/devel-config-tree" "$base" arch/arm/Kconfig genorder
	"$here/devel-config-tree" "$base" arch/powerpc/Kconfig genorder
} | tee APW | sed \
	-e 's@ROOT>>Bus support(>>|$)@ROOT>>Bus options (PCI etc.)@' \
	-e 's@ROOT>>Kernel Features(>>|$)@ROOT>>Processor type and features@' \
	-e 's@ROOT>>CPU Power Management(>>|$)@ROOT>>Power management and ACPI options@' \
	-e 's@ROOT>>Userspace binary formats(>>|$)@ROOT>>Executable file formats / Emulations@' \
	-e 's@ROOT>>Power management options(>>|$)@ROOT>>Power management and ACPI options@' \
	-e 's@ROOT>>Platform support(>>|$)@ROOT>>Power management and ACPI options@' \
	-e 's@ROOT>>Platform support>>CPUIdle driver(>>|$)@ROOT>>Power management and ACPI options@' \
	-e 's@ROOT>>Kernel options(>>|$)@ROOT>>Processor type and features@' \
	-e 's@ROOT>>Kernel options(>>|$)@ROOT>>Executable file formats / Emulations@' \
	-e 's@ROOT>>Kernel options(>>|$)@ROOT>>Power management and ACPI options@' \
	-e 's@ROOT>>Bus options(>>|$)@ROOT>>Bus options (PCI etc.)@' \
| LANG=C sort | uniq >"$list"

cat "$list" | grep '^M ' | \
while read junk menu
do
	name=`echo "$menu" | sed \
		-e 's/ROOT>>//g' 
	`
	#what_menu "$list" "$menu"
	echo "$name ... " 1>&2
	list_menu "$name" "$menu" ""
done

rm -f "$list"
