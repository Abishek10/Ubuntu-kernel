#!/usr/bin/perl

use strict;

my %options;
my @options;
my %values;

if ($ARGV[0] eq '--required') {
	open(RQRD, "<$ARGV[1]") || die "$0: $ARGV[1]: open failed - $!\n";
	while (<RQRD>) {
		chomp;

		if (!defined $options{$_}) {
			$options{$_} = 1;
			push(@options, $_);
		}
	}
	close(RQRD);
	shift @ARGV;
	shift @ARGV;
}

my $policy = 1;
if ($ARGV[0] eq '--no-policy') {
	$policy = 0;
	shift @ARGV;
}

my %flags;
my %expected;
my @a;

if ($ARGV[0] eq '--info') {
	my ($config, $maybe, $default, $expected, $options, $option, $value);
	open(INFO, "<$ARGV[1]") || die "$0: $ARGV[1]: open failed - $!\n";
	while (<INFO>) {
		chomp;
		($config, $maybe, $default, $expected, $options) = split(' ', $_, 5);
		while ($options =~ /\s*(\S+)<(.*?)?>/g) {
			($option, $value) = ($1, $2);
			if ($option eq 'flag') {
				$flags{$config} .= " '''$value'''";
			} elsif ($option eq 'note') {
				$flags{$config} .= " $2";
			}
		}
		$values{'Policy', $config} = $expected;
	}
	close(INFO);
	shift @ARGV;
	shift @ARGV;

} else {
	$policy = 0;
}

my $sort = 0;
if ($ARGV[0] eq '--sort') {
	$sort = 1;
	shift @ARGV;
}
my @columns = @ARGV;

my $opt;
my $is;
for my $column (@columns) {
	open(CONFIG, "<$column") || die "$0: $column: open failed - $!\n";
	while (<CONFIG>) {
		chomp;

		if ($_ =~ /^# (\S+) is not set/) {
			$opt = $1;
			$is = 'n';
		} elsif ($_ =~ /(\S+)=(\S+)/) {
			$opt = $1;
			$is = $2;
		} else {
			next;
		}

		$values{$column, $opt} = $is;

		if (!defined $options{$opt}) {
			$options{$opt} = 1;
			push(@options, $opt);
		}
	}
	close(CONFIG);
}

@options = sort(@options) if ($sort);

push(@columns, "Policy") if ($policy);

print "|| '''Option'''";
for my $column (@columns) {
	print " || '''$column'''";
}
print " || '''Comments''' ||\n";
my $val;
my $cmt;
my $all;
my $one;

$all = '';
for my $option (@options) {
	$all = '';
	$cmt = '';
	$one = '';
	print "|| $option";
	for my $column (@columns) {
		$is = (defined $values{$column, $option})?
				$values{$column, $option} : '-';
		print " || $is";
		if ($is !~ m@/@ && $is ne '-') {
			$all .= $is . '/' if ($all !~ /$is/);
		}
		if ($is ne '-') {
			$one = $is;
		}
	}
	chop($all);
	$all = join('/', sort(split(m@/@, $all)));

	if ($all eq '') {
		$cmt .= " '''GONE'''";
	} elsif ($all ne $one) {
		$cmt .= " '''Inconsistent'''";
	}
	if ($flags{$option}) {
		$cmt .= $flags{$option};
	}
	print " || $cmt ||\n";
}
