#!/bin/bash

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

if [ "$#" -ne 2 ]; then
	echo "Usage: $0 <info> <config directory>" 1>&2
	exit 1
fi
info="$1"
configs="$2"

all=`ls -1 "$configs"`
#cmp=''
#for i in $all
#do
#	cmp="$cmp `echo "$i" | sed -e 's/config\.flavour\.//'`"
#done
#echo "cmp<$cmp>"

rm -rf tmp
mkdir -p tmp

level='===='

function rebuild() {
	local what="$1"
	local not="$2"
	local out
	rm -f "tmp/*"

	[ "$not" = "" ] && not="^NOT_VALID"

	for i in $all
	do
		out=`echo "$i" | sed -e 's/config\.flavour\.//'`
		egrep -h "$what" "$configs/$i" | egrep -h -v "$not" | \
			sort >"tmp/$out"
	done
}
function config-cmp() {
	(cd tmp; "$here/config-compare" --info "../$info" *)
}
function config-cmp-nopolicy() {
	(cd tmp; "$here/config-compare" --no-policy --info "../$info" *)
}
function config-cmp-interesting() {
	(cd tmp; "$here/config-compare" --info "../$info" *) | grep -v '||  ||$'
	(cd tmp; "$here/config-compare" --info "../$info" *) | grep '||  ||$'
}

function colourise() {
	awk '/Inconsistent/ { gsub("\\|\\| ", "||<#ffbac8> "); } {print }'
}
function colourise_inverse() {
	awk '/\|\|  *\('"'''\(EXPERIMENTAL|STAGING|DEBUG\)'''"'\)* \|\|/ { gsub("\\|\\| ", "||<#ffbac8> ")} { print }'
}

what='FS[ =]'
rebuild "$what" "CONFIG_.*(_DEBUG_FS|_PROC_FS|_DEBUGFS|_PROCFS|_SYSFS|_PARTITION_.*)[ =]"

echo ""
echo "$level Filesystems $level"
config-cmp-interesting $cmp | colourise
echo ""

##what='CONFIG_(LSM_MMAP_MIN_ADDR|DEFAULT_MMAP_MIN_ADDR|APPARMOR|SELINUX|TOMOYO|COMPAT_BRK|DEVKMEM|SYN_COOKIES|SECURITY|SECCOMP|COMPAT_VDSO|DEBUG_RODATA|STRICT_DEVMEM|SECURITY_FILE_CAPABILITIES|SECURITY_SMACK|CC_STACKPROTECTOR)[ =]'
##rebuild "$what"
##
##echo ""
##echo "$level Security $level"
##config-cmp $cmp
##echo ""

what='CONFIG_(PCI|USB|BT|SCSI|APM|ACPI|NET|NETFILTER|ATA|INPUT|HID)[ =]'
rebuild "$what"

echo ""
echo "$level Subsystems $level"
config-cmp-interesting $cmp | colourise
echo ""

what="(CONFIG_NET_9P|CONFIG_ATM|CONFIG_AX25|CONFIG_BRIDGE|CONFIG_CAIF|CONFIG_CAN|CONFIG_DCB|CONFIG_DECNET|CONFIG_DNS_RESOLVER|CONFIG_NET_DSA|CONFIG_ECONET|CONFIG_NET_ETHERNET|CONFIG_IEEE802154|CONFIG_IPV6|CONFIG_IPX|CONFIG_IRDA|CONFIG_NET_KEY|CONFIG_L2TP|CONFIG_LAPB|CONFIG_LLC|CONFIG_MAC80211|CONFIG_NETFILTER|CONFIG_NETLABEL|CONFIG_NETROM|CONFIG_PACKET|CONFIG_PHONET|CONFIG_RDS|CONFIG_RFKILL|CONFIG_ROSE|CONFIG_NET_SCHED|CONFIG_SUNRPC|CONFIG_TIPC|CONFIG_UNIX|CONFIG_WIMAX|CONFIG_WIRELESS|CONFIG_X25|CONFIG_XFRM)[ =]"
rebuild "$what"

echo ""
echo "$level Network Protocols $level"
config-cmp-interesting $cmp | colourise
echo ""

what='CONFIG_(ATA|SATA|PATA)_'
rebuild "$what"

echo ""
echo "$level {,S,P}ATA Drivers $level"
config-cmp-interesting $cmp | colourise
echo ""

what='CONFIG_INPUT_'
rebuild "$what" "CONFIG_INPUT_(KXTJ9_POLLED_MODE)[ =]"

echo ""
echo "$level Input Drivers $level"
config-cmp-interesting $cmp | colourise
echo ""

what='CONFIG_HID_'
rebuild "$what"

echo ""
echo "$level HID Drivers $level"
config-cmp-interesting $cmp | colourise
echo ""

what='CONFIG_SENSORS_'
rebuild "$what"

echo ""
echo "$level Sensor Drivers $level"
config-cmp-interesting $cmp | colourise
echo ""

what='CONFIG_CRYPTO_'
rebuild "$what"

echo ""
echo "$level Crypto $level"
config-cmp-interesting $cmp | colourise
echo ""

what='CONFIG_NETFILTER_XT_'
rebuild "$what"

echo ""
echo "$level Netfilter Match/Targets $level"
config-cmp-interesting $cmp | colourise
echo ""

function what_flag()
{
	typeset flag="$1"

	what=`awk '/flag<'"$flag"'>/ { print $1 }' <"$info" |
		tr '\n' '|' | sed -e 's/^/(/' -e 's/|$/)/'`
}
what_flag 'DANGEROUS'
rebuild "$what"

echo ""
echo "$level DANGEROUS Options $level"
config-cmp-interesting $cmp | colourise
echo ""

rebuild ""
awk '($2 ~ /[Mm]/) { print $1 "=m" }' <"$info" >"tmp/000-MODULES"

echo ""
echo "$level Non-modular modules $level"
what=`config-cmp-nopolicy $cmp | tee APW | \
	awk '($4 == "m" && /'"'''Inconsistent'''"'/) { print $2 }' | tee APW2 | \
		tr '\n' '|' | sed -e 's/^/(/' -e 's/|$/)[ =]/'`
rm tmp/000-MODULES
rebuild "$what"
config-cmp $cmp | colourise
echo ""
