# Default filesystems are generally built-in
CONFIG_EXT3_FS y note<default filesystem>
CONFIG_EXT4_FS y note<default filesystem>

# Some modules have no clear way to autoload them.
#  filesystems:
CONFIG_FUSE_FS y note<not autoloadable>
CONFIG_ECRYPT_FS y note<not autoloadable>
#  AGP drivers:
CONFIG_AGP y note<not autoloadable>
CONFIG_AGP_AMD64 y note<not autoloadable>
CONFIG_AGP_INTEL y note<not autoloadable>
CONFIG_AGP_VIA y note<not autoloadable>
CONFIG_AGP_AMD y note<not autoloadable>
CONFIG_AGP_NVIDIA y note<not autoloadable>
#  cpu governers:
CONFIG_CPU_FREQ_GOV_CONSERVATIVE y note<not autoloadable>
CONFIG_CPU_FREQ_GOV_ONDEMAND y note<not autoloadable>
CONFIG_CPU_FREQ_GOV_POWERSAVE y note<not autoloadable>
CONFIG_CPU_FREQ_GOV_USERSPACE y note<not autoloadable>
#  cpufreq drivers
CONFIG_X86_ACPI_CPUFREQ y note<not autoloadable>
CONFIG_X86_LONGHAUL y note<not autoloadable>
CONFIG_X86_LONGRUN y note<not autoloadable>
CONFIG_X86_POWERNOW_K6 y note<not autoloadable>
CONFIG_X86_POWERNOW_K7 y note<not autoloadable>
CONFIG_X86_POWERNOW_K8 y note<not autoloadable>
CONFIG_X86_SPEEDSTEP_CENTRINO y note<not autoloadable>
CONFIG_X86_SPEEDSTEP_ICH y note<not autoloadable>
CONFIG_X86_GX_SUSPMOD y note<not autoloadable>
CONFIG_X86_SPEEDSTEP_SMI y note<not autoloadable>

# Boot essential items are always =y
#  subsystems:
CONFIG_ATA y note<core subsystem>
CONFIG_USB y note<core subsystem>
CONFIG_RFKILL y note<core subsystem>
CONFIG_NFC y note<core subsystem>
CONFIG_INPUT y note<core subsystem>
CONFIG_SCSI y note<core subsystem>
#  network protocols:
CONFIG_UNIX y note<boot essential>
CONFIG_PACKET y note<boot essential>
CONFIG_FDDI y note <core protocol>
# IPv6 packets trigger auto-loading of this module and it is easy to trigger
# a DOS unless this is builtin.  It is also a critical protocol going forward
# and will become boot essential.
CONFIG_IPV6 y note<boot essential>
#  input devices
CONFIG_INPUT_EVDEV y note<boot essential>
CONFIG_INPUT_MOUSEDEV y note<boot essential>
CONFIG_INPUT_UINPUT y note<boot essential>
#  ACPI drivers
CONFIG_ACPI_AC y note<boot essential>
CONFIG_ACPI_BATTERY y note<boot essential>
CONFIG_ACPI_BUTTON y note<boot essential>
CONFIG_ACPI_FAN y note<boot essential>
CONFIG_ACPI_PROCESSOR y note<boot essential>
CONFIG_ACPI_THERMAL y note<boot essential>

# Boot essential dependancies
CONFIG_BLK_CGROUP - note<depandancy of boot essential>
CONFIG_BLK_DEV_DM - note<depandancy of boot essential>
CONFIG_BLK_DEV_LOOP - note<depandancy of boot essential>
CONFIG_BLK_DEV_MD - note<depandancy of boot essential>
CONFIG_BLK_DEV_RAM - note<depandancy of boot essential>
CONFIG_BLK_DEV_SD - note<depandancy of boot essential>
CONFIG_BLK_DEV_SR - note<depandancy of boot essential>
#  CONFIG_ECRYPTFS or CONFIG_DM
CONFIG_CRYPTO_CRC32C y note<depandancy of boot essential>
CONFIG_CRYPTO_CRC32C_INTEL y note<depandancy of boot essential>
CONFIG_CRYPTO_DEV_PADLOCK y note <depandancy of boot essential>

# EXPERIMENTAL Network protocols are generally enabled to allow testing.
CONFIG_ECONET m note<network protocol -- opt-in>
CONFIG_IEEE802154 m note<network protocol -- opt-in>
CONFIG_LAPB m note<network protocol -- opt-in>
CONFIG_NET_DSA m note<network protocol -- opt-in>
CONFIG_RDS m note<network protocol -- opt-in>
CONFIG_TIPC m note<network protocol -- opt-in>
CONFIG_X25 m note<network protocol -- opt-in>

# ATA controolers: some are boot essential on specific architectures
CONFIG_ATA_GENERIC - note<boot essential on i386/amd64>
CONFIG_ATA_PIIX - note<boot essential on i386/amd64>
CONFIG_PATA_ACPI - note<boot essential on i386/amd64>
CONFIG_PATA_SIS - note<boot essential on i386/amd64>
CONFIG_SATA_SVW - note<boot essential on powerpc>
CONFIG_SATA_AHCI - note<boot essential on i386/amd64>

# ARM requires FAT for kernel installation.
CONFIG_FAT_FS - note<installation essential on arm>
CONFIG_VFAT_FS - note<installation essential on arm>
CONFIG_NLS_CODEPAGE_437 - note<installation essential on arm>

# ARM commonly use sd cards as root disks.
CONFIG_MMC_SDHCI - note<installation essential on arm>

# Security risk.
CONFIG_ACPI_CUSTOM_METHOD n note<Security: allows arbitrary execution>

# DM_RAID45 only appears in PC BIOS based systems
CONFIG_DM_RAID45 - note<PC BIOS specific>

# EFI_VARS is required for EFI boot
CONFIG_EFI_VARS y note<EFI boot requirement (d-i)>

# IDE is derecated on i386/amd64.
CONFIG_IDE - note<IDE is deprecated>

# Debugging options are off by default, we want those below.
CONFIG_DEBUG_FS y note<required debug option>
CONFIG_DEBUG_KERNEL y note<required debug option>

# Non-obvious filesystems.
CONFIG_USB_FUNCTIONFS m note<filesystems are opt-in>
CONFIG_USB_GADGETFS m note<filesystems are opt-in>

# ARM omap3
CONFIG_PANEL_DVI - note<required for omap3 video>

# ARM gadget mode
CONFIG_USB_OTG - note<ARM specific feature>

# powerpc64-smp requires this as CONFIG_MAPLE is enabled
CONFIG_ATA_NONSTANDARD - note<required for powerpc64-smp dep of CONFIG_MAPLE>

# CONFIG_LLC is =y due to CONFIG_TR other than ARM
CONFIG_LLC - note<CONFIG_TR triggers =m on ARM =y otherwise>
