#!/bin/bash
P="cod-source-trigger"

set -e

here=`dirname $0`
case "$here" in
/*) ;;
*)  here="`pwd`/$here" ;;
esac

master_main="$HOME/COD"

#master_repo="/srv/kernel.ubuntu.com/git/ubuntu/"
master_repo="git://kernel.ubuntu.com/ubuntu"


#
# Add and update the upstream repositories as needed.
#
update_repo()
{
	local repo="$1"
	local series="$2"
	local series_repo

	(
		if [ ! -d "$master_main/$repo" ]; then
			echo "$P: creating initial repo ($repo) ..."
			mkdir -p "$master_main/$repo"
			cd "$master_main/$repo" && git init
		else
			cd "$master_main/$repo"
		fi
		series_repo=`echo "$repo" | sed -e "s/linux/ubuntu-$series/"`
		series_repo="$master_repo/$series_repo.git"
		if ! git remote | grep "$series" >/dev/null 2>&1; then
			echo "$P: adding $series remote ($series_repo)..."
			git remote add "$series" "$series_repo"
		fi
		git fetch "$series" || true
	)
}

# Ensure we have our state directory.
mkdir -p "$master_main/state/source"

#
# UBUNTU SOURCE: tips of the ubuntu trees et al
#
date=`date +%Y%m%d%H%M`
while read ppa series repo branch repo2 branch2
do
	current="${repo}_${series}_${branch}"
	curr="$master_main/state/source/$current"
	branch="$series/$branch"

	update_repo "$repo" "$series"

	# Find the first non-ignored commit, the first real change.
	tip=`cd "$master_main/$repo" && git log "$branch" | awk '
		BEGIN				{ sha1 = "" }
		/^ *UBUNTU: Bump ABI/		{ exit }
		/^commit /			{ if (sha1 != "") { exit };
						  sha1 = $2 }
		/^ *Ignore: *yes/		{ sha1 = "" }
		END				{ print sha1 }
	'`

	release=`cd "$master_main/$repo" && git log "$branch" | awk '
		/^commit /			{ sha1 = $2 }
		/^ *UBUNTU: *Ubuntu-/		{ exit }
		END				{ print sha1 }
	'`
	prev=`cat "$curr" 2>/dev/null || true`

	echo "repo<$repo> branch<$branch> tip<$tip> release<$release> prev<$prev>"

	changed=0
	if [ "$tip" != "$prev" ]; then
		# Commit the new tip.
		echo "$tip" >"$curr.new"
		mv -f "$curr.new" "$curr"

		if [ "$tip" != "$release" ]; then
			"$here/cod-enqueue" "A" \
				"$here/cod-source" "$ppa" "$repo" "$series" \
					"$tip" "$date"
			changed=1
		else
			echo "tip represents release, nothing to do"
		fi
	fi

	# If we are dealing with linux then we need to ensure that linux-meta
	# is uploaded with an appropriate ABI number.
	if [ "$repo2" = "" -o "$changed" = 0 ]; then
		continue
	fi

	update_repo "$repo2" "$series"

	current="${repo2}_${series}_${branch2}.ABI"
	curr2="$master_main/state/source/$current"
	branch2="$series/$branch2"

        # Find the abi number for the tip.
        changelog=`cd "$master_main/$repo" && \
                { git cat-file -p "$tip:debian/debian.env" 2>/dev/null ||
                echo "DEBIAN=debian"; } | sed -e 's/DEBIAN=//'
	`
        abi_tip=`cd "$master_main/$repo" && \
                git cat-file -p "$tip:$changelog/changelog" | \
		sed -n '1s/.*(.*-\\([^\\.]*\\)\\..*).*/\\1/p'
	`
#        abi_meta=`cd "$master_main/$repo2" && \
#                git cat-file -p "$branch2:meta-source/debian/changelog" | \
#		sed -n '1s/.*(.*\\.\\([^\\.]*\\)\\.[^\\.]*).*/\\1/p'
#	`

	prev2=`cat "$curr2" 2>/dev/null || echo 0`

	echo "repo2<$repo2> branch2<$branch2> abi_tip<$abi_tip> prev2<$prev2>"

	# If the meta abi number is behind then organise getting it updated.
	if [ "$prev2" -lt "$abi_tip" ]; then
		# Commit the new tip.
		echo "$abi_tip" >"$curr2.new"
		mv -f "$curr2.new" "$curr2"

		echo "$here/cod-enqueue" "A" \
			"$here/cod-source" "$ppa" "$repo2" "$series" \
				"$branch2" "$date" "$abi_tip"
		"$here/cod-enqueue" "A" \
			"$here/cod-source" "$ppa" "$repo2" "$series" \
				"$branch2" "$date" "$abi_tip"
	fi
done <<EOL
test-devel saucy linux master-next linux-meta master
test-devel saucy linux goldfish linux-meta goldfish
test-devel saucy linux grouper linux-meta grouper
test-devel saucy linux maguro linux-meta maguro
test-devel saucy linux mako linux-meta mako
test-devel saucy linux manta linux-meta manta
pre-proposed raring linux master-next linux-meta master
pre-proposed raring linux-lbm master
pre-proposed quantal linux master-next linux-meta master
pre-proposed quantal linux-lbm master
pre-proposed precise linux master-next linux-meta master
pre-proposed precise linux-lbm master
pre-proposed lucid linux master-next linux-meta master
pre-proposed lucid linux-lbm master
EOL
