diff -urp origin/iwl-base.c compatible/iwl-base.c
--- origin/iwl-base.c	2007-08-21 11:42:14.000000000 +0800
+++ compatible/iwl-base.c	2007-08-21 11:50:03.000000000 +0800
@@ -185,6 +185,71 @@ static const char *iwl_escape_essid(cons
 	return escaped;
 }
 
+#ifndef hex_dump_to_buffer
+static inline int snprint_line(char *buf, size_t count,
+			       const u8 * data, u32 len, u32 ofs)
+{
+	int out, i, j, l;
+	char c;
+
+	out = snprintf(buf, count, "%08X", ofs);
+
+	for (l = 0, i = 0; i < 2; i++) {
+		out += snprintf(buf + out, count - out, " ");
+		for (j = 0; j < 8 && l < len; j++, l++)
+			out +=
+			    snprintf(buf + out, count - out, "%02X ",
+				     data[(i * 8 + j)]);
+		for (; j < 8; j++)
+			out += snprintf(buf + out, count - out, "   ");
+	}
+	out += snprintf(buf + out, count - out, " ");
+	for (l = 0, i = 0; i < 2; i++) {
+		out += snprintf(buf + out, count - out, " ");
+		for (j = 0; j < 8 && l < len; j++, l++) {
+			c = data[(i * 8 + j)];
+			if (!isascii(c) || !isprint(c))
+				c = '.';
+
+			out += snprintf(buf + out, count - out, "%c", c);
+		}
+
+		for (; j < 8; j++)
+			out += snprintf(buf + out, count - out, " ");
+	}
+
+	return out;
+}
+
+#ifdef CONFIG_IWLWIFI_DEBUG
+static inline void printk_buf(int level, const void *p, u32 len)
+{
+	const u8 *data = p;
+	char line[81];
+	u32 ofs = 0;
+	if (!(iwl_debug_level & level))
+		return;
+
+	while (len) {
+		snprint_line(line, sizeof(line), &data[ofs],
+			     min(len, 16U), ofs);
+		printk(KERN_DEBUG "%s\n", line);
+		ofs += 16;
+		len -= min(len, 16U);
+	}
+}
+#else
+#define printk_buf(level, p, len) do {} while (0)
+#endif
+
+#define hex_dump_to_buffer(d, s, l, g, lb, ls, a) \
+	snprint_line(lb, ls, d, min(s, (unsigned int)l), 0)
+
+#define print_hex_dump(m, p, t, l, g, d, s, a) \
+	printk_buf(IWL_DL_INFO, d, s);
+
+#endif /* hex_dump_to_buffer */
+
 static void iwl_print_hex_dump(int level, void *p, u32 len)
 {
 #ifdef CONFIG_IWLWIFI_DEBUG
