commit 73e337a0a5ff353d504a42fdbc6062d8b4d545a2
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Fri Feb 29 07:12:43 2008 -0700

    UBUNTU: ifdef iwlwifi debug messages
    OriginalAuthor: kevin.a.wang@intel.com
    Bug: #190475
    
    A number of debug messages puke out warnings as a result of received traffic at
    line rates. This is obviously a log filler. Since the messages are informational
    in nature, simply ifdef them and wrap them in a net_ratelimit() clause.
    
    Signed-off-by: Kevin A Wang <kevin.a.wang@intel.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>

--- net/mac80211/ieee80211.c
+++ net/mac80211/ieee80211.c
@@ -3861,13 +3861,16 @@ ieee80211_rx_h_check(struct ieee80211_txrx_data *rx)
 			if (!rx->key) {
 				if (!rx->u.rx.ra_match)
 					return TXRX_DROP;
-				printk(KERN_DEBUG "%s: RX WEP frame with "
-				       "unknown keyidx %d (A1=" MAC_FMT " A2="
-				       MAC_FMT " A3=" MAC_FMT ")\n",
-				       rx->dev->name, keyidx,
-				       MAC_ARG(hdr->addr1),
-				       MAC_ARG(hdr->addr2),
-				       MAC_ARG(hdr->addr3));
+#ifdef CONFIG_MAC80211_DEBUG
+				if (net_ratelimit())
+					printk(KERN_DEBUG "%s: RX WEP frame with "
+					       "unknown keyidx %d (A1=" MAC_FMT " A2="
+					       MAC_FMT " A3=" MAC_FMT ")\n",
+					       rx->dev->name, keyidx,
+					       MAC_ARG(hdr->addr1),
+					       MAC_ARG(hdr->addr2),
+					       MAC_ARG(hdr->addr3));
+#endif /* CONFIG_MAC80211_DEBUG */
 				if (!rx->local->apdev)
 					return TXRX_DROP;
 				ieee80211_rx_mgmt(
--- net/mac80211/wep.c
+++ net/mac80211/wep.c
@@ -265,7 +265,10 @@ int ieee80211_wep_decrypt(struct ieee80211_local *local, struct sk_buff *skb,
 	if (ieee80211_wep_decrypt_data(local->wep_rx_tfm, rc4key, klen,
 				       skb->data + hdrlen + WEP_IV_LEN,
 				       len)) {
-		printk(KERN_DEBUG "WEP decrypt failed (ICV)\n");
+#ifdef CONFIG_MAC80211_DEBUG
+		if (net_ratelimit())
+			printk(KERN_DEBUG "WEP decrypt failed (ICV)\n");
+#endif /* CONFIG_MAC80211_DEBUG */
 		ret = -1;
 	}
 
--- net/mac80211/wpa.c
+++ net/mac80211/wpa.c
@@ -177,8 +177,11 @@ ieee80211_rx_h_michael_mic_verify(struct ieee80211_txrx_data *rx)
 		if (!rx->u.rx.ra_match)
 			return TXRX_DROP;
 
-		printk(KERN_DEBUG "%s: invalid Michael MIC in data frame from "
-		       MAC_FMT "\n", rx->dev->name, MAC_ARG(sa));
+#ifdef CONFIG_MAC80211_DEBUG
+		if (net_ratelimit())
+			printk(KERN_DEBUG "%s: invalid Michael MIC in data frame from "
+		       	MAC_FMT "\n", rx->dev->name, MAC_ARG(sa));
+#endif /* CONFIG_MAC80211_DEBUG */
 
 		do {
 			struct ieee80211_hdr *hdr;
@@ -368,9 +371,12 @@ ieee80211_rx_h_tkip_decrypt(struct ieee80211_txrx_data *rx)
 					  skb->len - hdrlen, rx->sta->addr,
 					  hwaccel, rx->u.rx.queue);
 	if (res != TKIP_DECRYPT_OK || wpa_test) {
-		printk(KERN_DEBUG "%s: TKIP decrypt failed for RX frame from "
-		       MAC_FMT " (res=%d)\n",
-		       rx->dev->name, MAC_ARG(rx->sta->addr), res);
+#ifdef CONFIG_MAC80211_DEBUG
+		if (net_ratelimit())
+			printk(KERN_DEBUG "%s: TKIP decrypt failed for RX frame from "
+		       	MAC_FMT " (res=%d)\n",
+		       	rx->dev->name, MAC_ARG(rx->sta->addr), res);
+#endif /* CONFIG_MAC80211_DEBUG */
 		return TXRX_DROP;
 	}
 
@@ -641,9 +647,12 @@ ieee80211_rx_h_ccmp_decrypt(struct ieee80211_txrx_data *rx)
 			    skb->data + hdrlen + CCMP_HDR_LEN, data_len,
 			    skb->data + skb->len - CCMP_MIC_LEN,
 			    skb->data + hdrlen + CCMP_HDR_LEN)) {
-			printk(KERN_DEBUG "%s: CCMP decrypt failed for RX "
-			       "frame from " MAC_FMT "\n", rx->dev->name,
-			       MAC_ARG(rx->sta->addr));
+#ifdef CONFIG_MAC80211_DEBUG
+			if (net_ratelimit())
+				printk(KERN_DEBUG "%s: CCMP decrypt failed for RX "
+			       	"frame from " MAC_FMT "\n", rx->dev->name,
+			       	MAC_ARG(rx->sta->addr));
+#endif /* CONFIG_MAC80211_DEBUG */
 			return TXRX_DROP;
 		}
 	}
