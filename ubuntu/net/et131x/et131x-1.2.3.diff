diff -r -u --new-file et131x-1.2.3/ET1310_rx.h et131x/ET1310_rx.h
--- et131x-1.2.3/ET1310_rx.h	2007-01-25 03:57:37.000000000 -0700
+++ et131x/ET1310_rx.h	2007-09-26 10:39:13.000000000 -0600
@@ -438,7 +438,7 @@
     /**************************************************************************
        lookaside lists
      *************************************************************************/
-    kmem_cache_t             *RecvLookaside;
+    struct kmem_cache           *RecvLookaside;
 }
 RX_RING_t, *PRX_RING_t;
 
diff -r -u --new-file et131x-1.2.3/et131x_debug.c et131x/et131x_debug.c
--- et131x-1.2.3/et131x_debug.c	2007-01-25 03:57:37.000000000 -0700
+++ et131x/et131x_debug.c	2007-09-26 11:10:01.000000000 -0600
@@ -73,7 +73,7 @@
 
 
 
-#if ET131X_DBG
+#if defined(ET131X_DBG)
 
 
 
diff -r -u --new-file et131x-1.2.3/et131x_isr.c et131x/et131x_isr.c
--- et131x-1.2.3/et131x_isr.c	2007-02-20 14:03:10.000000000 -0700
+++ et131x/et131x_isr.c	2007-09-26 10:39:13.000000000 -0600
@@ -170,7 +170,7 @@
    REUSE INFORMATION :
         
  *****************************************************************************/
-irqreturn_t et131x_isr( int irq, void *dev_id, struct pt_regs *regs )
+irqreturn_t et131x_isr( int irq, void *dev_id )
 {
     BOOL_t                 handled = TRUE;
     struct net_device     *netdev  = (struct net_device *)dev_id;
diff -r -u --new-file et131x-1.2.3/et131x_isr.h et131x/et131x_isr.h
--- et131x-1.2.3/et131x_isr.h	2007-02-20 14:03:23.000000000 -0700
+++ et131x/et131x_isr.h	2007-09-26 10:39:13.000000000 -0600
@@ -86,7 +86,7 @@
 #if ( LINUX_VERSION_CODE < KERNEL_VERSION( 2,6,0 ))
 void et131x_isr( int irq, void *dev_id, struct pt_regs *regs );
 #else
-irqreturn_t et131x_isr( int irq, void *dev_id, struct pt_regs *regs );
+irqreturn_t et131x_isr( int irq, void *dev_id );
 #endif
 
 void et131x_isr_handler( struct work_struct *work );
diff -r -u --new-file et131x-1.2.3/et131x_netdev.c et131x/et131x_netdev.c
--- et131x-1.2.3/et131x_netdev.c	2007-01-25 14:31:35.000000000 -0700
+++ et131x/et131x_netdev.c	2007-09-26 10:39:13.000000000 -0600
@@ -458,7 +458,7 @@
      *************************************************************************/
     DBG_TRACE( et131x_dbginfo, "Registering ISR...\n" );
 
-    result = request_irq( netdev->irq, et131x_isr, SA_SHIRQ, netdev->name, netdev );
+    result = request_irq( netdev->irq, et131x_isr, IRQF_SHARED, netdev->name, netdev );
     if( result )
     {
         DBG_ERROR( et131x_dbginfo, "Could not register ISR\n" );
@@ -1328,8 +1328,7 @@
  *****************************************************************************/
 int et131x_set_mac_addr( struct net_device *netdev, void *new_mac )
 {
-    DBG_FUNC( "et131x_set_mac_addr" );
-    DBG_ENTER( et131x_dbginfo );
+    DBG_FUNC( "et131x_set_mac_addr" )
     // begin blux
     // DBG_VERBOSE( et131x_dbginfo, "Function not implemented!!\n" );
 
@@ -1338,6 +1337,7 @@
     struct sockaddr *address = new_mac;
     /*-----------------------------------------------------------------------*/
 
+    DBG_ENTER( et131x_dbginfo );
 
     /**************************************************************************
        Get the private adapter structure
@@ -1602,7 +1602,7 @@
 
     if( pAdapter->vlgrp )
     {
-        pAdapter->vlgrp->vlan_devices[vid] = NULL;
+        pAdapter->vlgrp->vlan_devices_arrays[vid] = NULL;
     }
 
 
diff -r -u --new-file et131x-1.2.3/Makefile et131x/Makefile
--- et131x-1.2.3/Makefile	2007-02-21 10:34:55.000000000 -0700
+++ et131x/Makefile	2007-09-26 11:15:04.000000000 -0600
@@ -1,151 +1,151 @@
-#/******************************************************************************
-#
-#                Copyright (c) 2002-2004 Agere Systems
-#                         All Rights Reserved.
-#
-#          THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AGERE SYSTEMS
-#
-#                The copyright notice above does not evidence any 
-#               actual or intended publication of such source code.
-#
-# ******************************************************************************
-#
-#   MODULE NAME       : Makefile
-#
-#   ABSTRACT          : The "Master" makefile for building the ET131x driver.
-#
-#   ENVIRONMENT       : Kernel Mode
-#
-#   DEVELOPER NOTES   :
-#
-#   REUSE INSTRUCTIONS: 
-#
-#   HISTORICAL DATA   : 
-#         CHANGED BY     DATE        COMMENTS
-#         ==========     ==========  ===========================================
-#         Victor Soriano 03/21/2005  Initial Creation
-#
-#
-# ******************************************************************************
-# *  VERSION CONTROL INFORMATION
-# ******************************************************************************
-#
-#      $Archive: $
-#     $Workfile: $
-#         $Date: 2006/01/20 21:29:45 $
-#     $Revision: 1.12 $
-#      $Modtime: $
-#       $Author: vjs $
-#   $NoKeywords: $
-#
-# *****************************************************************************/
-
-
-# *****************************************************************************/
-#  Definintions common to all builds
-# *****************************************************************************/
-
-KERNEL_VER := $(shell uname -r)
-MODULE_DIR := /lib/modules/$(KERNEL_VER)
-KERNEL_DIR := $(MODULE_DIR)/build
-KERNEL_24  := $(if $(wildcard $(KERNEL_DIR)/Rules.make),1,0)
-KERNEL_64B := $(shell uname -p)
-
-ifeq ($(KERNEL_24),1)
-KERNEL_INC := $(KERNEL_DIR)/include
-else
-KERNEL_SRC := /lib/modules/$(KERNEL_VER)/source
-KSRC       := $(if $(wildcard $(KERNEL_SRC)),1,0)
-ifeq ($(KSRC),1)
-KERNEL_INC := $(KERNEL_SRC)/include
-else
-KERNEL_INC := $(KERNEL_DIR)/include
-endif
-endif
-
-
-MODNAME     = et131x
-MODNAME_EXT = et131x.o
-
-OBJS    = et131x_main.o \
-          et131x_initpci.o \
-          et131x_isr.o \
-          et131x_netdev.o \
-          et131x_supp.o \
-          et131x_config.o \
-          et131x_debug.o
-
-OBJS   += ET1310_jagcore.o \
-          ET1310_tx.o \
-          ET1310_rx.o \
-          ET1310_phy.o \
-          ET1310_mac.o \
-          ET1310_pm.o \
-          ET1310_eeprom.o
-
-
-
-
-# *****************************************************************************/
-#  Using the KERNEL_24 variable defined above, test to see if we're building
-#  in a 2.4.x or 2.6.x environment and use the appropriate build directives.
-# *****************************************************************************/
-ifeq ($(KERNEL_24),1)
-
-
-CC = gcc
-LD = ld
-
-CFLAGS = -D__KERNEL__ -DMODULE -DET131X_DBG -I$(KERNEL_INC) -I$(KERNEL_INC)/linux -I$(PWD) -O -Wall
-
-ifeq ($(KERNEL_64B),x86_64)
-CFLAGS += -mcmodel=kernel
-endif
-
-all: $(MODNAME_EXT)
-
-$(MODNAME_EXT): $(OBJS)
-	$(LD) -r $^ -o $@
-
-clean:
-	rm -f *.o *.d *~ core
-
-modules_install:
-	cp $(MODNAME).o $(MODULE_DIR)/kernel/drivers/net
-	/sbin/depmod -a -q
-
-else
-
-
-obj-m        := $(MODNAME_EXT)
-$(MODNAME)-y += $(OBJS)
-
-EXTRA_CFLAGS := -I$(KERNEL_INC)/linux -DET131X_DBG
-
-# The following build rules were defined as such in order to properly support
-# initial versions of the 2.6 kernel where the kbuild environment had not yet
-# stabilized (i.e. Suse 9.1, 2.6.4-52). The two changes which needed to be made
-# were:
-#    
-#    1. The make command defines the SUBDIRS variable to be the location of the
-#       module code, instead of using the newer M variable. In Suse 9.1, using
-#       M would for some reason cause a rebuild the entire modules tree without
-#       building our module.
-#   
-#    2. A seperate 'clean' rule had to be defined which manually cleans our
-#       module directory. On newer 2.6 kernels, calling into the kernel dir's
-#       Makefile would clean our module directory properly, but this doesn't
-#       happen in older kernels (again, Suse 9.1, 2.6.4-52). 
-
-
-modules modules_install:
-	#@$(MAKE) -C $(KERNEL_DIR) M=$(CURDIR) $@
-	@$(MAKE) -C $(KERNEL_DIR) SUBDIRS=$(CURDIR) $@
-
-clean:
-	rm -f *.o *.ko *.d *~ .*.d .*.cmd .*.swp *.mod*
-	rm -rf .tmp_versions
-
-
-endif
-
+#/******************************************************************************
+#
+#                Copyright (c) 2002-2004 Agere Systems
+#                         All Rights Reserved.
+#
+#          THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AGERE SYSTEMS
+#
+#                The copyright notice above does not evidence any 
+#               actual or intended publication of such source code.
+#
+# ******************************************************************************
+#
+#   MODULE NAME       : Makefile
+#
+#   ABSTRACT          : The "Master" makefile for building the ET131x driver.
+#
+#   ENVIRONMENT       : Kernel Mode
+#
+#   DEVELOPER NOTES   :
+#
+#   REUSE INSTRUCTIONS: 
+#
+#   HISTORICAL DATA   : 
+#         CHANGED BY     DATE        COMMENTS
+#         ==========     ==========  ===========================================
+#         Victor Soriano 03/21/2005  Initial Creation
+#
+#
+# ******************************************************************************
+# *  VERSION CONTROL INFORMATION
+# ******************************************************************************
+#
+#      $Archive: $
+#     $Workfile: $
+#         $Date: 2006/01/20 21:29:45 $
+#     $Revision: 1.12 $
+#      $Modtime: $
+#       $Author: vjs $
+#   $NoKeywords: $
+#
+# *****************************************************************************/
+
+
+# *****************************************************************************/
+#  Definintions common to all builds
+# *****************************************************************************/
+
+KERNEL_VER := $(shell uname -r)
+MODULE_DIR := /lib/modules/$(KERNEL_VER)
+KERNEL_DIR := $(MODULE_DIR)/build
+KERNEL_24  := $(if $(wildcard $(KERNEL_DIR)/Rules.make),1,0)
+KERNEL_64B := $(shell uname -p)
+
+ifeq ($(KERNEL_24),1)
+KERNEL_INC := $(KERNEL_DIR)/include
+else
+KERNEL_SRC := /lib/modules/$(KERNEL_VER)/source
+KSRC       := $(if $(wildcard $(KERNEL_SRC)),1,0)
+ifeq ($(KSRC),1)
+KERNEL_INC := $(KERNEL_SRC)/include
+else
+KERNEL_INC := $(KERNEL_DIR)/include
+endif
+endif
+
+
+MODNAME     = et131x
+MODNAME_EXT = et131x.o
+
+OBJS    = et131x_main.o \
+          et131x_initpci.o \
+          et131x_isr.o \
+          et131x_netdev.o \
+          et131x_supp.o \
+          et131x_config.o \
+          et131x_debug.o
+
+OBJS   += ET1310_jagcore.o \
+          ET1310_tx.o \
+          ET1310_rx.o \
+          ET1310_phy.o \
+          ET1310_mac.o \
+          ET1310_pm.o \
+          ET1310_eeprom.o
+
+
+
+
+# *****************************************************************************/
+#  Using the KERNEL_24 variable defined above, test to see if we're building
+#  in a 2.4.x or 2.6.x environment and use the appropriate build directives.
+# *****************************************************************************/
+ifeq ($(KERNEL_24),1)
+
+
+CC = gcc
+LD = ld
+
+CFLAGS = -D__KERNEL__ -DMODULE -DET131X_DBG -I$(KERNEL_INC) -I$(KERNEL_INC)/linux -I$(PWD) -O -Wall
+
+ifeq ($(KERNEL_64B),x86_64)
+CFLAGS += -mcmodel=kernel
+endif
+
+all: $(MODNAME_EXT)
+
+$(MODNAME_EXT): $(OBJS)
+	$(LD) -r $^ -o $@
+
+clean:
+	rm -f *.o *.d *~ core
+
+modules_install:
+	cp $(MODNAME).o $(MODULE_DIR)/kernel/drivers/net
+	/sbin/depmod -a -q
+
+else
+
+
+obj-m        := $(MODNAME_EXT)
+$(MODNAME)-y += $(OBJS)
+
+EXTRA_CFLAGS := -I$(KERNEL_INC)/linux -DET131X_DBG
+
+# The following build rules were defined as such in order to properly support
+# initial versions of the 2.6 kernel where the kbuild environment had not yet
+# stabilized (i.e. Suse 9.1, 2.6.4-52). The two changes which needed to be made
+# were:
+#    
+#    1. The make command defines the SUBDIRS variable to be the location of the
+#       module code, instead of using the newer M variable. In Suse 9.1, using
+#       M would for some reason cause a rebuild the entire modules tree without
+#       building our module.
+#   
+#    2. A seperate 'clean' rule had to be defined which manually cleans our
+#       module directory. On newer 2.6 kernels, calling into the kernel dir's
+#       Makefile would clean our module directory properly, but this doesn't
+#       happen in older kernels (again, Suse 9.1, 2.6.4-52). 
+
+
+modules modules_install:
+	#@$(MAKE) -C $(KERNEL_DIR) M=$(CURDIR) $@
+	@$(MAKE) -C $(KERNEL_DIR) SUBDIRS=$(CURDIR) $@
+
+clean:
+	rm -f *.o *.ko *.d *~ .*.d .*.cmd .*.swp *.mod*
+	rm -rf .tmp_versions
+
+
+endif
+
