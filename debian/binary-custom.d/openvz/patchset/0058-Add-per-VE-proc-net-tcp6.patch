From ae2649d1f4e2249b3854be0570ea5074aa1836cb Mon Sep 17 00:00:00 2001
From: Konstantin Khlebnikov <khlebnikov@openvz.org>
Date: Tue, 1 Apr 2008 18:19:20 +0400
Subject: [PATCH 57/67] Add per-VE /proc/net/tcp6

Required for netstat.
http://bugzilla.openvz.org/show_bug.cgi?id=860
---
 include/net/tcp.h   |    4 ++--
 net/ipv4/tcp_ipv4.c |   12 ++++++------
 net/ipv6/tcp_ipv6.c |   19 +++++++++++++++++--
 3 files changed, 25 insertions(+), 10 deletions(-)

Index: kernel/include/net/tcp.h
===================================================================
--- kernel.orig/include/net/tcp.h	2008-11-24 15:47:46.000000000 +0100
+++ kernel/include/net/tcp.h	2008-11-24 15:59:46.000000000 +0100
@@ -1358,8 +1358,8 @@
 	struct seq_operations	seq_ops;
 };
 
-extern int tcp_proc_register(struct tcp_seq_afinfo *afinfo);
-extern void tcp_proc_unregister(struct tcp_seq_afinfo *afinfo);
+extern int tcp_proc_register(struct net *net, struct tcp_seq_afinfo *afinfo);
+extern void tcp_proc_unregister(struct net *net, struct tcp_seq_afinfo *afinfo);
 
 extern struct request_sock_ops tcp_request_sock_ops;
 
Index: kernel/net/ipv4/tcp_ipv4.c
===================================================================
--- kernel.orig/net/ipv4/tcp_ipv4.c	2008-11-24 15:47:46.000000000 +0100
+++ kernel/net/ipv4/tcp_ipv4.c	2008-11-24 15:59:46.000000000 +0100
@@ -2289,7 +2289,7 @@
 	goto out;
 }
 
-int tcp_proc_register(struct tcp_seq_afinfo *afinfo)
+int tcp_proc_register(struct net *net, struct tcp_seq_afinfo *afinfo)
 {
 	int rc = 0;
 	struct proc_dir_entry *p;
@@ -2302,7 +2302,7 @@
 	afinfo->seq_fops->llseek	= seq_lseek;
 	afinfo->seq_fops->release	= seq_release_private;
 
-	p = proc_net_fops_create(current->nsproxy->net_ns, afinfo->name, S_IRUGO, afinfo->seq_fops);
+	p = proc_net_fops_create(net, afinfo->name, S_IRUGO, afinfo->seq_fops);
 	if (p)
 		p->data = afinfo;
 	else
@@ -2310,12 +2310,12 @@
 	return rc;
 }
 
-void tcp_proc_unregister(struct tcp_seq_afinfo *afinfo)
+void tcp_proc_unregister(struct net *net, struct tcp_seq_afinfo *afinfo)
 {
 	if (!afinfo)
 		return;
 
-	proc_net_remove(current->nsproxy->net_ns, afinfo->name);
+	proc_net_remove(net, afinfo->name);
 	memset(afinfo->seq_fops, 0, sizeof(*afinfo->seq_fops));
 }
 
@@ -2456,12 +2456,12 @@
 
 static int tcp4_proc_net_init(struct net *net)
 {
-	return tcp_proc_register(&tcp4_seq_afinfo);
+	return tcp_proc_register(net, &tcp4_seq_afinfo);
 }
 
 static void tcp4_proc_net_exit(struct net *net)
 {
-	tcp_proc_unregister(&tcp4_seq_afinfo);
+	tcp_proc_unregister(net, &tcp4_seq_afinfo);
 }
 
 static struct pernet_operations tcp4_proc_net_ops = {
Index: kernel/net/ipv6/tcp_ipv6.c
===================================================================
--- kernel.orig/net/ipv6/tcp_ipv6.c	2008-11-24 15:47:46.000000000 +0100
+++ kernel/net/ipv6/tcp_ipv6.c	2008-11-24 15:59:46.000000000 +0100
@@ -2107,14 +2107,29 @@
 	.seq_fops	= &tcp6_seq_fops,
 };
 
+static int tcp6_proc_net_init(struct net *net)
+{
+	return tcp_proc_register(net, &tcp6_seq_afinfo);
+}
+
+static void tcp6_proc_net_exit(struct net *net)
+{
+	tcp_proc_unregister(net, &tcp6_seq_afinfo);
+}
+
+static struct pernet_operations tcp6_proc_net_ops = {
+	.init = tcp6_proc_net_init,
+	.exit = tcp6_proc_net_exit,
+};
+
 int __init tcp6_proc_init(void)
 {
-	return tcp_proc_register(&tcp6_seq_afinfo);
+	return register_pernet_subsys(&tcp6_proc_net_ops);
 }
 
 void tcp6_proc_exit(void)
 {
-	tcp_proc_unregister(&tcp6_seq_afinfo);
+	unregister_pernet_subsys(&tcp6_proc_net_ops);
 }
 #endif
 
