From 69e391057ffeb889138078c85666c2db4bd9c182 Mon Sep 17 00:00:00 2001
From: Alexey Dobriyan <adobriyan@openvz.org>
Date: Fri, 14 Mar 2008 15:54:13 +0300
Subject: [PATCH 27/48] NETFILTER: move init functions after fini functions

This is getting incosistent across netfilter changes, so make it consistent.
---
 net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c |   20 ++++++------
 net/ipv4/netfilter/nf_conntrack_proto_icmp.c   |   32 ++++++++++----------
 net/ipv6/netfilter/nf_conntrack_l3proto_ipv6.c |   20 ++++++------
 net/ipv6/netfilter/nf_conntrack_proto_icmpv6.c |   22 +++++++-------
 net/netfilter/nf_conntrack_proto_generic.c     |   28 +++++++++---------
 net/netfilter/nf_conntrack_proto_tcp.c         |   38 ++++++++++++------------
 net/netfilter/nf_conntrack_proto_udp.c         |   38 ++++++++++++------------
 7 files changed, 99 insertions(+), 99 deletions(-)

diff --git a/net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c b/net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c
index 9ac2567..fee3438 100644
--- a/net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c
+++ b/net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c
@@ -429,16 +429,6 @@ MODULE_LICENSE("GPL");
 
 #ifdef CONFIG_VE_IPTABLES
 #if defined(CONFIG_SYSCTL) && defined(CONFIG_NF_CONNTRACK_PROC_COMPAT)
-static void nf_ct_proto_ipv4_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-		free_sysctl_clone(ve_nf_conntrack_l3proto_ipv4->ctl_table);
-		ve_nf_conntrack_l3proto_ipv4->ctl_table = NULL;
-		kfree(ve_nf_conntrack_l3proto_ipv4);
-		ve_nf_conntrack_l3proto_ipv4 = NULL;
-	}
-}
-
 static int nf_ct_proto_ipv4_sysctl_init(void)
 {
 	struct nf_conntrack_l3proto *ipv4 = ve_nf_conntrack_l3proto_ipv4;
@@ -456,6 +446,16 @@ static int nf_ct_proto_ipv4_sysctl_init(void)
 
 	return 0;
 }
+
+static void nf_ct_proto_ipv4_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+		free_sysctl_clone(ve_nf_conntrack_l3proto_ipv4->ctl_table);
+		ve_nf_conntrack_l3proto_ipv4->ctl_table = NULL;
+		kfree(ve_nf_conntrack_l3proto_ipv4);
+		ve_nf_conntrack_l3proto_ipv4 = NULL;
+	}
+}
 #else
 static inline int nf_ct_proto_ipv4_sysctl_init(void)
 {
diff --git a/net/ipv4/netfilter/nf_conntrack_proto_icmp.c b/net/ipv4/netfilter/nf_conntrack_proto_icmp.c
index d3c13ad..83a62bb 100644
--- a/net/ipv4/netfilter/nf_conntrack_proto_icmp.c
+++ b/net/ipv4/netfilter/nf_conntrack_proto_icmp.c
@@ -337,22 +337,6 @@ struct nf_conntrack_l4proto nf_conntrack_l4proto_icmp __read_mostly =
 };
 
 #if defined(CONFIG_VE_IPTABLES) && defined(CONFIG_SYSCTL)
-void nf_ct_proto_icmp_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
-		free_sysctl_clone(
-				ve_nf_conntrack_l4proto_icmp->ctl_compat_table);
-		ve_nf_conntrack_l4proto_icmp->ctl_compat_table = NULL;
-#endif
-		free_sysctl_clone(ve_nf_conntrack_l4proto_icmp->ctl_table);
-		ve_nf_conntrack_l4proto_icmp->ctl_table = NULL;
-		kfree(ve_nf_conntrack_l4proto_icmp);
-		ve_nf_conntrack_l4proto_icmp = NULL;
-	}
-}
-EXPORT_SYMBOL(nf_ct_proto_icmp_sysctl_cleanup);
-
 int nf_ct_proto_icmp_sysctl_init(void)
 {
 	struct nf_conntrack_l4proto *icmp;
@@ -397,4 +381,20 @@ no_mem_ct:
 	return -ENOMEM;
 }
 EXPORT_SYMBOL(nf_ct_proto_icmp_sysctl_init);
+
+void nf_ct_proto_icmp_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
+		free_sysctl_clone(
+				ve_nf_conntrack_l4proto_icmp->ctl_compat_table);
+		ve_nf_conntrack_l4proto_icmp->ctl_compat_table = NULL;
+#endif
+		free_sysctl_clone(ve_nf_conntrack_l4proto_icmp->ctl_table);
+		ve_nf_conntrack_l4proto_icmp->ctl_table = NULL;
+		kfree(ve_nf_conntrack_l4proto_icmp);
+		ve_nf_conntrack_l4proto_icmp = NULL;
+	}
+}
+EXPORT_SYMBOL(nf_ct_proto_icmp_sysctl_cleanup);
 #endif /* CONFIG_VE_IPTABLES && CONFIG_SYSCTL */
diff --git a/net/ipv6/netfilter/nf_conntrack_l3proto_ipv6.c b/net/ipv6/netfilter/nf_conntrack_l3proto_ipv6.c
index 030ab5c..3cf1e6c 100644
--- a/net/ipv6/netfilter/nf_conntrack_l3proto_ipv6.c
+++ b/net/ipv6/netfilter/nf_conntrack_l3proto_ipv6.c
@@ -396,16 +396,6 @@ MODULE_LICENSE("GPL");
 MODULE_AUTHOR("Yasuyuki KOZAKAI @USAGI <yasuyuki.kozakai@toshiba.co.jp>");
 
 #if defined(CONFIG_VE_IPTABLES) && defined(CONFIG_SYSCTL)
-static void nf_ct_proto_ipv6_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-		free_sysctl_clone(ve_nf_conntrack_l3proto_ipv6->ctl_table);
-		ve_nf_conntrack_l3proto_ipv6->ctl_table = NULL;
-		kfree(ve_nf_conntrack_l3proto_ipv6);
-		ve_nf_conntrack_l3proto_ipv6 = NULL;
-	}
-}
-
 static int nf_ct_proto_ipv6_sysctl_init(void)
 {
 	struct nf_conntrack_l3proto *ipv6;
@@ -441,6 +431,16 @@ no_mem_sys:
 no_mem_ct:
         return -ENOMEM;
 }
+
+static void nf_ct_proto_ipv6_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+		free_sysctl_clone(ve_nf_conntrack_l3proto_ipv6->ctl_table);
+		ve_nf_conntrack_l3proto_ipv6->ctl_table = NULL;
+		kfree(ve_nf_conntrack_l3proto_ipv6);
+		ve_nf_conntrack_l3proto_ipv6 = NULL;
+	}
+}
 #endif /* CONFIG_VE_IPTABLES && CONFIG_SYSCTL */
 
 int init_nf_ct_l3proto_ipv6(void)
diff --git a/net/ipv6/netfilter/nf_conntrack_proto_icmpv6.c b/net/ipv6/netfilter/nf_conntrack_proto_icmpv6.c
index 8b930a3..9f23a5d 100644
--- a/net/ipv6/netfilter/nf_conntrack_proto_icmpv6.c
+++ b/net/ipv6/netfilter/nf_conntrack_proto_icmpv6.c
@@ -297,17 +297,6 @@ struct nf_conntrack_l4proto nf_conntrack_l4proto_icmpv6 __read_mostly =
 };
 
 #if defined(CONFIG_VE_IPTABLES) && defined(CONFIG_SYSCTL)
-void nf_ct_proto_icmpv6_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-		free_sysctl_clone(ve_nf_conntrack_l4proto_icmpv6->ctl_table);
-		ve_nf_conntrack_l4proto_icmpv6->ctl_table = NULL;
-		kfree(ve_nf_conntrack_l4proto_icmpv6);
-		ve_nf_conntrack_l4proto_icmpv6 = NULL;
-	}
-}
-EXPORT_SYMBOL(nf_ct_proto_icmpv6_sysctl_cleanup);
-
 int nf_ct_proto_icmpv6_sysctl_init(void)
 {
 	struct nf_conntrack_l4proto *icmp6;
@@ -340,4 +329,15 @@ no_mem_ct:
 	return -ENOMEM;
 }
 EXPORT_SYMBOL(nf_ct_proto_icmpv6_sysctl_init);
+
+void nf_ct_proto_icmpv6_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+		free_sysctl_clone(ve_nf_conntrack_l4proto_icmpv6->ctl_table);
+		ve_nf_conntrack_l4proto_icmpv6->ctl_table = NULL;
+		kfree(ve_nf_conntrack_l4proto_icmpv6);
+		ve_nf_conntrack_l4proto_icmpv6 = NULL;
+	}
+}
+EXPORT_SYMBOL(nf_ct_proto_icmpv6_sysctl_cleanup);
 #endif /* CONFIG_VE_IPTABLES && CONFIG_SYSCTL */
diff --git a/net/netfilter/nf_conntrack_proto_generic.c b/net/netfilter/nf_conntrack_proto_generic.c
index 9980d3d..e1a9cdd 100644
--- a/net/netfilter/nf_conntrack_proto_generic.c
+++ b/net/netfilter/nf_conntrack_proto_generic.c
@@ -118,20 +118,6 @@ struct nf_conntrack_l4proto nf_conntrack_l4proto_generic __read_mostly =
 };
 
 #if defined(CONFIG_VE_IPTABLES) && defined(CONFIG_SYSCTL)
-void nf_ct_proto_generic_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
-		free_sysctl_clone(
-			ve_nf_conntrack_l4proto_generic->ctl_compat_table);
-		ve_nf_conntrack_l4proto_generic->ctl_compat_table = NULL;
-#endif
-		free_sysctl_clone(ve_nf_conntrack_l4proto_generic->ctl_table);
-		ve_nf_conntrack_l4proto_generic->ctl_table = NULL;
-	}
-}
-EXPORT_SYMBOL(nf_ct_proto_generic_sysctl_cleanup);
-
 int nf_ct_proto_generic_sysctl_init(void)
 {
 	struct nf_conntrack_l4proto *generic;
@@ -175,4 +161,18 @@ no_mem_ct:
 	return -ENOMEM;
 }
 EXPORT_SYMBOL(nf_ct_proto_generic_sysctl_init);
+
+void nf_ct_proto_generic_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
+		free_sysctl_clone(
+			ve_nf_conntrack_l4proto_generic->ctl_compat_table);
+		ve_nf_conntrack_l4proto_generic->ctl_compat_table = NULL;
+#endif
+		free_sysctl_clone(ve_nf_conntrack_l4proto_generic->ctl_table);
+		ve_nf_conntrack_l4proto_generic->ctl_table = NULL;
+	}
+}
+EXPORT_SYMBOL(nf_ct_proto_generic_sysctl_cleanup);
 #endif /* CONFIG_VE_IPTABLES && CONFIG_SYSCTL */
diff --git a/net/netfilter/nf_conntrack_proto_tcp.c b/net/netfilter/nf_conntrack_proto_tcp.c
index ca1462a..9908983 100644
--- a/net/netfilter/nf_conntrack_proto_tcp.c
+++ b/net/netfilter/nf_conntrack_proto_tcp.c
@@ -1411,25 +1411,6 @@ struct nf_conntrack_l4proto nf_conntrack_l4proto_tcp6 __read_mostly =
 EXPORT_SYMBOL_GPL(nf_conntrack_l4proto_tcp6);
 
 #if defined(CONFIG_VE_IPTABLES) && defined(CONFIG_SYSCTL)
-void nf_ct_proto_tcp_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
-		free_sysctl_clone(
-			ve_nf_conntrack_l4proto_tcp4->ctl_compat_table);
-		ve_nf_conntrack_l4proto_tcp4->ctl_compat_table = NULL;
-#endif
-		free_sysctl_clone(ve_nf_conntrack_l4proto_tcp4->ctl_table);
-		ve_nf_conntrack_l4proto_tcp4->ctl_table = NULL;
-		kfree(ve_nf_conntrack_l4proto_tcp4);
-		ve_nf_conntrack_l4proto_tcp4 = NULL;
-
-		kfree(ve_nf_conntrack_l4proto_tcp6);
-		ve_nf_conntrack_l4proto_tcp6 = NULL;
-	}
-}
-EXPORT_SYMBOL(nf_ct_proto_tcp_sysctl_cleanup);
-
 int nf_ct_proto_tcp_sysctl_init(void)
 {
 	struct nf_conntrack_l4proto *tcp4, *tcp6;
@@ -1522,5 +1503,24 @@ no_mem_ct4:
 	return -ENOMEM;
 }
 EXPORT_SYMBOL(nf_ct_proto_tcp_sysctl_init);
+
+void nf_ct_proto_tcp_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
+		free_sysctl_clone(
+			ve_nf_conntrack_l4proto_tcp4->ctl_compat_table);
+		ve_nf_conntrack_l4proto_tcp4->ctl_compat_table = NULL;
+#endif
+		free_sysctl_clone(ve_nf_conntrack_l4proto_tcp4->ctl_table);
+		ve_nf_conntrack_l4proto_tcp4->ctl_table = NULL;
+		kfree(ve_nf_conntrack_l4proto_tcp4);
+		ve_nf_conntrack_l4proto_tcp4 = NULL;
+
+		kfree(ve_nf_conntrack_l4proto_tcp6);
+		ve_nf_conntrack_l4proto_tcp6 = NULL;
+	}
+}
+EXPORT_SYMBOL(nf_ct_proto_tcp_sysctl_cleanup);
 #endif /* CONFIG_VE_IPTABLES && CONFIG_SYSCTL */
 
diff --git a/net/netfilter/nf_conntrack_proto_udp.c b/net/netfilter/nf_conntrack_proto_udp.c
index bc43b9e..64674ae 100644
--- a/net/netfilter/nf_conntrack_proto_udp.c
+++ b/net/netfilter/nf_conntrack_proto_udp.c
@@ -241,25 +241,6 @@ struct nf_conntrack_l4proto nf_conntrack_l4proto_udp6 __read_mostly =
 EXPORT_SYMBOL_GPL(nf_conntrack_l4proto_udp6);
 
 #if defined(CONFIG_VE_IPTABLES) && defined(CONFIG_SYSCTL)
-void nf_ct_proto_udp_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
-		free_sysctl_clone(
-			ve_nf_conntrack_l4proto_udp4->ctl_compat_table);
-		ve_nf_conntrack_l4proto_udp4->ctl_compat_table = NULL;
-#endif
-		free_sysctl_clone(ve_nf_conntrack_l4proto_udp4->ctl_table);
-		ve_nf_conntrack_l4proto_udp4->ctl_table = NULL;
-		kfree(ve_nf_conntrack_l4proto_udp4);
-		ve_nf_conntrack_l4proto_udp4 = NULL;
-
-		kfree(ve_nf_conntrack_l4proto_udp6);
-		ve_nf_conntrack_l4proto_udp6 = NULL;
-	}
-}
-EXPORT_SYMBOL(nf_ct_proto_udp_sysctl_cleanup);
-
 int nf_ct_proto_udp_sysctl_init(void)
 {
 	struct nf_conntrack_l4proto *udp4, *udp6;
@@ -323,4 +304,23 @@ no_mem_ct4:
 	return -ENOMEM;
 }
 EXPORT_SYMBOL(nf_ct_proto_udp_sysctl_init);
+
+void nf_ct_proto_udp_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
+		free_sysctl_clone(
+			ve_nf_conntrack_l4proto_udp4->ctl_compat_table);
+		ve_nf_conntrack_l4proto_udp4->ctl_compat_table = NULL;
+#endif
+		free_sysctl_clone(ve_nf_conntrack_l4proto_udp4->ctl_table);
+		ve_nf_conntrack_l4proto_udp4->ctl_table = NULL;
+		kfree(ve_nf_conntrack_l4proto_udp4);
+		ve_nf_conntrack_l4proto_udp4 = NULL;
+
+		kfree(ve_nf_conntrack_l4proto_udp6);
+		ve_nf_conntrack_l4proto_udp6 = NULL;
+	}
+}
+EXPORT_SYMBOL(nf_ct_proto_udp_sysctl_cleanup);
 #endif /* CONFIG_VE_IPTABLES && CONFIG_SYSCTL */
-- 
1.5.4.3

