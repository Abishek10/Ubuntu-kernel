From 69e391057ffeb889138078c85666c2db4bd9c182 Mon Sep 17 00:00:00 2001
From: Alexey Dobriyan <adobriyan@openvz.org>
Date: Fri, 14 Mar 2008 15:54:13 +0300
Subject: [PATCH 27/48] NETFILTER: move init functions after fini functions

This is getting incosistent across netfilter changes, so make it consistent.
---
 net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c |   20 ++++++------
 net/ipv4/netfilter/nf_conntrack_proto_icmp.c   |   32 ++++++++++----------
 net/ipv6/netfilter/nf_conntrack_l3proto_ipv6.c |   20 ++++++------
 net/ipv6/netfilter/nf_conntrack_proto_icmpv6.c |   22 +++++++-------
 net/netfilter/nf_conntrack_proto_generic.c     |   28 +++++++++---------
 net/netfilter/nf_conntrack_proto_tcp.c         |   38 ++++++++++++------------
 net/netfilter/nf_conntrack_proto_udp.c         |   38 ++++++++++++------------
 7 files changed, 99 insertions(+), 99 deletions(-)

Index: kernel/net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c
===================================================================
--- kernel.orig/net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c	2008-11-24 15:57:32.000000000 +0100
+++ kernel/net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c	2008-11-24 15:57:35.000000000 +0100
@@ -429,16 +429,6 @@
 
 #ifdef CONFIG_VE_IPTABLES
 #if defined(CONFIG_SYSCTL) && defined(CONFIG_NF_CONNTRACK_PROC_COMPAT)
-static void nf_ct_proto_ipv4_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-		free_sysctl_clone(ve_nf_conntrack_l3proto_ipv4->ctl_table);
-		ve_nf_conntrack_l3proto_ipv4->ctl_table = NULL;
-		kfree(ve_nf_conntrack_l3proto_ipv4);
-		ve_nf_conntrack_l3proto_ipv4 = NULL;
-	}
-}
-
 static int nf_ct_proto_ipv4_sysctl_init(void)
 {
 	struct nf_conntrack_l3proto *ipv4 = ve_nf_conntrack_l3proto_ipv4;
@@ -456,6 +446,16 @@
 
 	return 0;
 }
+
+static void nf_ct_proto_ipv4_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+		free_sysctl_clone(ve_nf_conntrack_l3proto_ipv4->ctl_table);
+		ve_nf_conntrack_l3proto_ipv4->ctl_table = NULL;
+		kfree(ve_nf_conntrack_l3proto_ipv4);
+		ve_nf_conntrack_l3proto_ipv4 = NULL;
+	}
+}
 #else
 static inline int nf_ct_proto_ipv4_sysctl_init(void)
 {
Index: kernel/net/ipv4/netfilter/nf_conntrack_proto_icmp.c
===================================================================
--- kernel.orig/net/ipv4/netfilter/nf_conntrack_proto_icmp.c	2008-11-24 15:47:46.000000000 +0100
+++ kernel/net/ipv4/netfilter/nf_conntrack_proto_icmp.c	2008-11-24 15:57:35.000000000 +0100
@@ -337,22 +337,6 @@
 };
 
 #if defined(CONFIG_VE_IPTABLES) && defined(CONFIG_SYSCTL)
-void nf_ct_proto_icmp_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
-		free_sysctl_clone(
-				ve_nf_conntrack_l4proto_icmp->ctl_compat_table);
-		ve_nf_conntrack_l4proto_icmp->ctl_compat_table = NULL;
-#endif
-		free_sysctl_clone(ve_nf_conntrack_l4proto_icmp->ctl_table);
-		ve_nf_conntrack_l4proto_icmp->ctl_table = NULL;
-		kfree(ve_nf_conntrack_l4proto_icmp);
-		ve_nf_conntrack_l4proto_icmp = NULL;
-	}
-}
-EXPORT_SYMBOL(nf_ct_proto_icmp_sysctl_cleanup);
-
 int nf_ct_proto_icmp_sysctl_init(void)
 {
 	struct nf_conntrack_l4proto *icmp;
@@ -397,4 +381,20 @@
 	return -ENOMEM;
 }
 EXPORT_SYMBOL(nf_ct_proto_icmp_sysctl_init);
+
+void nf_ct_proto_icmp_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
+		free_sysctl_clone(
+				ve_nf_conntrack_l4proto_icmp->ctl_compat_table);
+		ve_nf_conntrack_l4proto_icmp->ctl_compat_table = NULL;
+#endif
+		free_sysctl_clone(ve_nf_conntrack_l4proto_icmp->ctl_table);
+		ve_nf_conntrack_l4proto_icmp->ctl_table = NULL;
+		kfree(ve_nf_conntrack_l4proto_icmp);
+		ve_nf_conntrack_l4proto_icmp = NULL;
+	}
+}
+EXPORT_SYMBOL(nf_ct_proto_icmp_sysctl_cleanup);
 #endif /* CONFIG_VE_IPTABLES && CONFIG_SYSCTL */
Index: kernel/net/ipv6/netfilter/nf_conntrack_l3proto_ipv6.c
===================================================================
--- kernel.orig/net/ipv6/netfilter/nf_conntrack_l3proto_ipv6.c	2008-11-24 15:47:46.000000000 +0100
+++ kernel/net/ipv6/netfilter/nf_conntrack_l3proto_ipv6.c	2008-11-24 15:57:35.000000000 +0100
@@ -396,16 +396,6 @@
 MODULE_AUTHOR("Yasuyuki KOZAKAI @USAGI <yasuyuki.kozakai@toshiba.co.jp>");
 
 #if defined(CONFIG_VE_IPTABLES) && defined(CONFIG_SYSCTL)
-static void nf_ct_proto_ipv6_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-		free_sysctl_clone(ve_nf_conntrack_l3proto_ipv6->ctl_table);
-		ve_nf_conntrack_l3proto_ipv6->ctl_table = NULL;
-		kfree(ve_nf_conntrack_l3proto_ipv6);
-		ve_nf_conntrack_l3proto_ipv6 = NULL;
-	}
-}
-
 static int nf_ct_proto_ipv6_sysctl_init(void)
 {
 	struct nf_conntrack_l3proto *ipv6;
@@ -441,6 +431,16 @@
 no_mem_ct:
         return -ENOMEM;
 }
+
+static void nf_ct_proto_ipv6_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+		free_sysctl_clone(ve_nf_conntrack_l3proto_ipv6->ctl_table);
+		ve_nf_conntrack_l3proto_ipv6->ctl_table = NULL;
+		kfree(ve_nf_conntrack_l3proto_ipv6);
+		ve_nf_conntrack_l3proto_ipv6 = NULL;
+	}
+}
 #endif /* CONFIG_VE_IPTABLES && CONFIG_SYSCTL */
 
 int init_nf_ct_l3proto_ipv6(void)
Index: kernel/net/ipv6/netfilter/nf_conntrack_proto_icmpv6.c
===================================================================
--- kernel.orig/net/ipv6/netfilter/nf_conntrack_proto_icmpv6.c	2008-11-24 15:47:46.000000000 +0100
+++ kernel/net/ipv6/netfilter/nf_conntrack_proto_icmpv6.c	2008-11-24 15:57:35.000000000 +0100
@@ -297,17 +297,6 @@
 };
 
 #if defined(CONFIG_VE_IPTABLES) && defined(CONFIG_SYSCTL)
-void nf_ct_proto_icmpv6_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-		free_sysctl_clone(ve_nf_conntrack_l4proto_icmpv6->ctl_table);
-		ve_nf_conntrack_l4proto_icmpv6->ctl_table = NULL;
-		kfree(ve_nf_conntrack_l4proto_icmpv6);
-		ve_nf_conntrack_l4proto_icmpv6 = NULL;
-	}
-}
-EXPORT_SYMBOL(nf_ct_proto_icmpv6_sysctl_cleanup);
-
 int nf_ct_proto_icmpv6_sysctl_init(void)
 {
 	struct nf_conntrack_l4proto *icmp6;
@@ -340,4 +329,15 @@
 	return -ENOMEM;
 }
 EXPORT_SYMBOL(nf_ct_proto_icmpv6_sysctl_init);
+
+void nf_ct_proto_icmpv6_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+		free_sysctl_clone(ve_nf_conntrack_l4proto_icmpv6->ctl_table);
+		ve_nf_conntrack_l4proto_icmpv6->ctl_table = NULL;
+		kfree(ve_nf_conntrack_l4proto_icmpv6);
+		ve_nf_conntrack_l4proto_icmpv6 = NULL;
+	}
+}
+EXPORT_SYMBOL(nf_ct_proto_icmpv6_sysctl_cleanup);
 #endif /* CONFIG_VE_IPTABLES && CONFIG_SYSCTL */
Index: kernel/net/netfilter/nf_conntrack_proto_generic.c
===================================================================
--- kernel.orig/net/netfilter/nf_conntrack_proto_generic.c	2008-11-24 15:57:33.000000000 +0100
+++ kernel/net/netfilter/nf_conntrack_proto_generic.c	2008-11-24 15:57:35.000000000 +0100
@@ -118,20 +118,6 @@
 };
 
 #if defined(CONFIG_VE_IPTABLES) && defined(CONFIG_SYSCTL)
-void nf_ct_proto_generic_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
-		free_sysctl_clone(
-			ve_nf_conntrack_l4proto_generic->ctl_compat_table);
-		ve_nf_conntrack_l4proto_generic->ctl_compat_table = NULL;
-#endif
-		free_sysctl_clone(ve_nf_conntrack_l4proto_generic->ctl_table);
-		ve_nf_conntrack_l4proto_generic->ctl_table = NULL;
-	}
-}
-EXPORT_SYMBOL(nf_ct_proto_generic_sysctl_cleanup);
-
 int nf_ct_proto_generic_sysctl_init(void)
 {
 	struct nf_conntrack_l4proto *generic;
@@ -175,4 +161,18 @@
 	return -ENOMEM;
 }
 EXPORT_SYMBOL(nf_ct_proto_generic_sysctl_init);
+
+void nf_ct_proto_generic_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
+		free_sysctl_clone(
+			ve_nf_conntrack_l4proto_generic->ctl_compat_table);
+		ve_nf_conntrack_l4proto_generic->ctl_compat_table = NULL;
+#endif
+		free_sysctl_clone(ve_nf_conntrack_l4proto_generic->ctl_table);
+		ve_nf_conntrack_l4proto_generic->ctl_table = NULL;
+	}
+}
+EXPORT_SYMBOL(nf_ct_proto_generic_sysctl_cleanup);
 #endif /* CONFIG_VE_IPTABLES && CONFIG_SYSCTL */
Index: kernel/net/netfilter/nf_conntrack_proto_tcp.c
===================================================================
--- kernel.orig/net/netfilter/nf_conntrack_proto_tcp.c	2008-11-24 15:47:46.000000000 +0100
+++ kernel/net/netfilter/nf_conntrack_proto_tcp.c	2008-11-24 15:57:35.000000000 +0100
@@ -1430,25 +1430,6 @@
 EXPORT_SYMBOL_GPL(nf_conntrack_l4proto_tcp6);
 
 #if defined(CONFIG_VE_IPTABLES) && defined(CONFIG_SYSCTL)
-void nf_ct_proto_tcp_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
-		free_sysctl_clone(
-			ve_nf_conntrack_l4proto_tcp4->ctl_compat_table);
-		ve_nf_conntrack_l4proto_tcp4->ctl_compat_table = NULL;
-#endif
-		free_sysctl_clone(ve_nf_conntrack_l4proto_tcp4->ctl_table);
-		ve_nf_conntrack_l4proto_tcp4->ctl_table = NULL;
-		kfree(ve_nf_conntrack_l4proto_tcp4);
-		ve_nf_conntrack_l4proto_tcp4 = NULL;
-
-		kfree(ve_nf_conntrack_l4proto_tcp6);
-		ve_nf_conntrack_l4proto_tcp6 = NULL;
-	}
-}
-EXPORT_SYMBOL(nf_ct_proto_tcp_sysctl_cleanup);
-
 int nf_ct_proto_tcp_sysctl_init(void)
 {
 	struct nf_conntrack_l4proto *tcp4, *tcp6;
@@ -1541,5 +1522,24 @@
 	return -ENOMEM;
 }
 EXPORT_SYMBOL(nf_ct_proto_tcp_sysctl_init);
+
+void nf_ct_proto_tcp_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
+		free_sysctl_clone(
+			ve_nf_conntrack_l4proto_tcp4->ctl_compat_table);
+		ve_nf_conntrack_l4proto_tcp4->ctl_compat_table = NULL;
+#endif
+		free_sysctl_clone(ve_nf_conntrack_l4proto_tcp4->ctl_table);
+		ve_nf_conntrack_l4proto_tcp4->ctl_table = NULL;
+		kfree(ve_nf_conntrack_l4proto_tcp4);
+		ve_nf_conntrack_l4proto_tcp4 = NULL;
+
+		kfree(ve_nf_conntrack_l4proto_tcp6);
+		ve_nf_conntrack_l4proto_tcp6 = NULL;
+	}
+}
+EXPORT_SYMBOL(nf_ct_proto_tcp_sysctl_cleanup);
 #endif /* CONFIG_VE_IPTABLES && CONFIG_SYSCTL */
 
Index: kernel/net/netfilter/nf_conntrack_proto_udp.c
===================================================================
--- kernel.orig/net/netfilter/nf_conntrack_proto_udp.c	2008-11-24 15:47:46.000000000 +0100
+++ kernel/net/netfilter/nf_conntrack_proto_udp.c	2008-11-24 15:57:35.000000000 +0100
@@ -241,25 +241,6 @@
 EXPORT_SYMBOL_GPL(nf_conntrack_l4proto_udp6);
 
 #if defined(CONFIG_VE_IPTABLES) && defined(CONFIG_SYSCTL)
-void nf_ct_proto_udp_sysctl_cleanup(void)
-{
-	if (!ve_is_super(get_exec_env())) {
-#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
-		free_sysctl_clone(
-			ve_nf_conntrack_l4proto_udp4->ctl_compat_table);
-		ve_nf_conntrack_l4proto_udp4->ctl_compat_table = NULL;
-#endif
-		free_sysctl_clone(ve_nf_conntrack_l4proto_udp4->ctl_table);
-		ve_nf_conntrack_l4proto_udp4->ctl_table = NULL;
-		kfree(ve_nf_conntrack_l4proto_udp4);
-		ve_nf_conntrack_l4proto_udp4 = NULL;
-
-		kfree(ve_nf_conntrack_l4proto_udp6);
-		ve_nf_conntrack_l4proto_udp6 = NULL;
-	}
-}
-EXPORT_SYMBOL(nf_ct_proto_udp_sysctl_cleanup);
-
 int nf_ct_proto_udp_sysctl_init(void)
 {
 	struct nf_conntrack_l4proto *udp4, *udp6;
@@ -323,4 +304,23 @@
 	return -ENOMEM;
 }
 EXPORT_SYMBOL(nf_ct_proto_udp_sysctl_init);
+
+void nf_ct_proto_udp_sysctl_cleanup(void)
+{
+	if (!ve_is_super(get_exec_env())) {
+#ifdef CONFIG_NF_CONNTRACK_PROC_COMPAT
+		free_sysctl_clone(
+			ve_nf_conntrack_l4proto_udp4->ctl_compat_table);
+		ve_nf_conntrack_l4proto_udp4->ctl_compat_table = NULL;
+#endif
+		free_sysctl_clone(ve_nf_conntrack_l4proto_udp4->ctl_table);
+		ve_nf_conntrack_l4proto_udp4->ctl_table = NULL;
+		kfree(ve_nf_conntrack_l4proto_udp4);
+		ve_nf_conntrack_l4proto_udp4 = NULL;
+
+		kfree(ve_nf_conntrack_l4proto_udp6);
+		ve_nf_conntrack_l4proto_udp6 = NULL;
+	}
+}
+EXPORT_SYMBOL(nf_ct_proto_udp_sysctl_cleanup);
 #endif /* CONFIG_VE_IPTABLES && CONFIG_SYSCTL */
