From 8f7aa861d70b16db33db541070a87ed03884e790 Mon Sep 17 00:00:00 2001
From: Konstantin Khlebnikov <khlebnikov@openvz.org>
Date: Fri, 18 Jul 2008 15:25:46 +0400
Subject: [PATCH 114/131] UBC cfq remove variable slice

Remove variable bc timeslice -- with fair queue it useless.
BC got bigger timeslice, but bandwidth unchanged,
because bc queued according it iotime.

Bandwidth distribution now fully controlled by iotime ratio coefficients.
---
 kernel/bc/io_prio.c |   14 ++------------
 1 files changed, 2 insertions(+), 12 deletions(-)

diff --git a/kernel/bc/io_prio.c b/kernel/bc/io_prio.c
index d3a39e5..74202fa 100644
--- a/kernel/bc/io_prio.c
+++ b/kernel/bc/io_prio.c
@@ -182,15 +182,7 @@ static inline int bc_empty(struct cfq_bc_data *cfq_bc)
 
 	return 0;
 }
- 
-static inline unsigned long bc_time_slice_by_ioprio(unsigned int ioprio,
- 							unsigned int base_slice)
-{
- 	return	base_slice +
- 		(base_slice * (ioprio - UB_IOPRIO_MIN))
- 		/ (UB_IOPRIO_MAX - UB_IOPRIO_MIN - 1);
-}
- 
+
 /* return true if a iotime after b, like time_after */
 static int bc_iotime_after(unsigned long a, unsigned long b)
 {
@@ -287,9 +279,7 @@ static inline void bc_set_active(struct cfq_data *cfqd)
 
 	cfqd->active_cfq_bc = cfq_bc;
 	cfqd->slice_begin = now;
-	cfqd->slice_end = now +
-		bc_time_slice_by_ioprio(cfqd->active_cfq_bc->ub_iopriv->ioprio,
-							cfqd->cfq_ub_slice);
+	cfqd->slice_end = now + cfqd->cfq_ub_slice;
 }
 
 void bc_schedule_active(struct cfq_data *cfqd)
-- 
1.5.4.3

