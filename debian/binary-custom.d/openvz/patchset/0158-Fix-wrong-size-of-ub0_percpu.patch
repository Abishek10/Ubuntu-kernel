From a5a69260c66a4decfcb3d678821267a18addef67 Mon Sep 17 00:00:00 2001
From: Konstantin Khlebnikov <khlebnikov@openvz.org>
Date: Tue, 7 Oct 2008 18:22:54 +0400
Subject: [PATCH 158/158] Fix wrong size of ub0_percpu

The struct percpu_data dynamically allocated and have array only for
1 cpu, so static usage of it does not work.

Plus rework macros for static percpu variables declaration and
initialization.

http://bugzilla.openvz.org/show_bug.cgi?id=1039

Singed-off-by: Konstantin Khlebnikov <khlebnikov@openvz.org>
Signed-off-by: Pavel Emelyanov <xemul@openvz.org>
---
 include/linux/percpu.h  |   21 +++++++++++++++++----
 kernel/bc/beancounter.c |    7 ++-----
 kernel/sched.c          |    8 ++------
 kernel/ve/ve.c          |   15 ++++-----------
 4 files changed, 25 insertions(+), 26 deletions(-)

Index: kernel/include/linux/percpu.h
===================================================================
--- kernel.orig/include/linux/percpu.h	2008-11-24 15:47:46.000000000 +0100
+++ kernel/include/linux/percpu.h	2008-11-24 16:08:17.000000000 +0100
@@ -49,11 +49,20 @@
         (__typeof__(ptr))__p->ptrs[(cpu)];	          \
 })
 
-#define static_percpu_ptr(sptr, sptrs) ({		\
+struct percpu_data_static {
+	void *ptrs[NR_CPUS];
+};
+
+#define DEFINE_PER_CPU_STATIC(type, name) \
+	static struct percpu_data_static per_cpu_data__##name; \
+	static __typeof__(type) per_cpu__##name[NR_CPUS]
+
+#define percpu_static_init(name) ({			\
 		int i;					\
 		for (i = 0; i < NR_CPUS; i++)		\
-			(sptr)->ptrs[i] = &(sptrs)[i];	\
-		(void *)__percpu_disguise(sptr);	\
+			(per_cpu_data__##name).ptrs[i] = &(per_cpu__##name)[i];\
+		(__typeof__(&(per_cpu__##name)[0]))     \
+		__percpu_disguise(&(per_cpu_data__##name));\
 	})
 
 extern void *percpu_populate(void *__pdata, size_t size, gfp_t gfp, int cpu);
@@ -67,7 +76,11 @@
 #else /* CONFIG_SMP */
 
 #define percpu_ptr(ptr, cpu) ({ (void)(cpu); (ptr); })
-#define static_percpu_ptr(sptr, sptrs)	(&sptrs[0])
+
+#define DEFINE_PER_CPU_STATIC(type, name) \
+	static __typeof__(type) per_cpu__##name[NR_CPUS]
+
+#define percpu_static_init(name)	(&(per_cpu__##name)[0])
 
 static inline void percpu_depopulate(void *__pdata, int cpu)
 {
Index: kernel/kernel/bc/beancounter.c
===================================================================
--- kernel.orig/kernel/bc/beancounter.c	2008-11-24 16:00:49.000000000 +0100
+++ kernel/kernel/bc/beancounter.c	2008-11-24 16:08:17.000000000 +0100
@@ -651,10 +651,7 @@
 	ub->ub_limit_rl.interval = 300*HZ;
 }
 
-#ifdef CONFIG_SMP
-static struct percpu_data ub0_percpu;
-#endif
-static struct ub_percpu_struct ub0_percpu_data[NR_CPUS];
+DEFINE_PER_CPU_STATIC(struct ub_percpu_struct, ub0_percpu);
 
 void __init ub_init_early(void)
 {
@@ -667,7 +664,7 @@
 	init_beancounter_nolimits(ub);
 	init_beancounter_store(ub);
 	init_beancounter_struct(ub);
-	ub->ub_percpu = static_percpu_ptr(&ub0_percpu, ub0_percpu_data);
+	ub->ub_percpu = percpu_static_init(ub0_percpu);
 
 	memset(&current->task_bc, 0, sizeof(struct task_beancounter));
 	(void)set_exec_ub(ub);
Index: kernel/kernel/sched.c
===================================================================
--- kernel.orig/kernel/sched.c	2008-11-24 16:01:59.000000000 +0100
+++ kernel/kernel/sched.c	2008-11-24 16:08:17.000000000 +0100
@@ -385,10 +385,7 @@
 #endif
 }
 
-#ifdef CONFIG_SMP
-static struct percpu_data kstat_lat_pcpu_stats;
-#endif
-static struct kstat_lat_pcpu_snap_struct kstat_lat_pcpu_stats_data[NR_CPUS];
+DEFINE_PER_CPU_STATIC(struct kstat_lat_pcpu_snap_struct, kstat_lat);
 struct kernel_stat_glob kstat_glob;
 
 DEFINE_SPINLOCK(kstat_glb_lock);
@@ -7172,8 +7169,7 @@
 	int highest_cpu = 0;
 	int i, j;
 
-	kstat_glob.sched_lat.cur = static_percpu_ptr(&kstat_lat_pcpu_stats,
-			kstat_lat_pcpu_stats_data);
+	kstat_glob.sched_lat.cur = percpu_static_init(kstat_lat);
 	for_each_possible_cpu(i) {
 		struct rt_prio_array *array;
 		struct rq *rq;
Index: kernel/kernel/ve/ve.c
===================================================================
--- kernel.orig/kernel/ve/ve.c	2008-11-24 16:08:08.000000000 +0100
+++ kernel/kernel/ve/ve.c	2008-11-24 16:08:17.000000000 +0100
@@ -118,13 +118,8 @@
 
 EXPORT_SYMBOL(ve0);
 
-#ifdef CONFIG_SMP
-static struct {
-	void *ptrs[NR_CPUS];
-} ve0_cpu_stats, ve0_lat_pcpu_stats;
-#endif
-static struct ve_cpu_stats ve0_cpu_stats_data[NR_CPUS];
-static struct kstat_lat_pcpu_snap_struct ve0_lat_pcpu_stats_data[NR_CPUS];
+DEFINE_PER_CPU_STATIC(struct ve_cpu_stats, ve0_cpu_stats);
+DEFINE_PER_CPU_STATIC(struct kstat_lat_pcpu_snap_struct, ve0_lat_stats);
 
 LIST_HEAD(ve_list_head);
 rwlock_t ve_list_lock = RW_LOCK_UNLOCKED;
@@ -147,10 +142,8 @@
 	(void)get_ve(ve);
 	atomic_set(&ve->pcounter, 1);
 
-	ve->cpu_stats = static_percpu_ptr(&ve0_cpu_stats,
-			ve0_cpu_stats_data);
-	ve->sched_lat_ve.cur = static_percpu_ptr(&ve0_lat_pcpu_stats,
-			ve0_lat_pcpu_stats_data);
+	ve->cpu_stats = percpu_static_init(ve0_cpu_stats);
+	ve->sched_lat_ve.cur = percpu_static_init(ve0_lat_stats);
 
 	list_add(&ve->ve_list, &ve_list_head);
 }
