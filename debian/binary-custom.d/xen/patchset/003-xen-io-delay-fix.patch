diff -Naur ubuntu-hardy-xen/arch/x86/kernel/setup_32-xen.c ubuntu-hardy-xen-fix/arch/x86/kernel/setup_32-xen.c
--- ubuntu-hardy-xen/arch/x86/kernel/setup_32-xen.c	2008-04-01 09:34:27.000000000 -0400
+++ ubuntu-hardy-xen-fix/arch/x86/kernel/setup_32-xen.c	2008-04-01 09:36:56.000000000 -0400
@@ -810,6 +810,8 @@
 	if (is_initial_xendomain())
 		dmi_scan_machine();
 
+	io_delay_init();;
+
 #ifdef CONFIG_X86_GENERICARCH
 	generic_apic_probe();
 #endif	
diff -Naur ubuntu-hardy-xen/arch/x86/kernel/setup_64-xen.c ubuntu-hardy-xen-fix/arch/x86/kernel/setup_64-xen.c
--- ubuntu-hardy-xen/arch/x86/kernel/setup_64-xen.c	2008-04-01 09:34:27.000000000 -0400
+++ ubuntu-hardy-xen-fix/arch/x86/kernel/setup_64-xen.c	2008-04-01 09:37:08.000000000 -0400
@@ -459,6 +459,8 @@
 		reserve_bootmem_generic(nodemap_addr, nodemap_size);
 #endif
 
+	io_delay_init();
+
 #ifdef CONFIG_SMP
 	/* Reserve SMP trampoline */
 	reserve_bootmem_generic(SMP_TRAMPOLINE_BASE, 2*PAGE_SIZE);
diff -Naur ubuntu-hardy-xen/include/asm-x86/mach-xen/asm/io_32.h ubuntu-hardy-xen-fix/include/asm-x86/mach-xen/asm/io_32.h
--- ubuntu-hardy-xen/include/asm-x86/mach-xen/asm/io_32.h	2008-04-01 09:34:31.000000000 -0400
+++ ubuntu-hardy-xen-fix/include/asm-x86/mach-xen/asm/io_32.h	2008-04-01 09:41:01.000000000 -0400
@@ -263,10 +263,9 @@
 
 #endif /* __KERNEL__ */
 
-static inline void xen_io_delay(void)
-{
-	asm volatile("outb %%al,$0x80" : : : "memory");
-}
+extern void xen_io_delay(void);
+extern int io_delay_type;
+extern void io_delay_init(void);
 
 static inline void slow_down_io(void) {
 	xen_io_delay();
diff -Naur ubuntu-hardy-xen/include/asm-x86/mach-xen/asm/io_64.h ubuntu-hardy-xen-fix/include/asm-x86/mach-xen/asm/io_64.h
--- ubuntu-hardy-xen/include/asm-x86/mach-xen/asm/io_64.h	2008-04-01 09:34:31.000000000 -0400
+++ ubuntu-hardy-xen-fix/include/asm-x86/mach-xen/asm/io_64.h	2008-04-01 09:46:16.000000000 -0400
@@ -36,13 +36,20 @@
   *  - Arnaldo Carvalho de Melo <acme@conectiva.com.br>
   */
 
-#define __SLOW_DOWN_IO "\noutb %%al,$0x80"
+extern void native_io_delay(void);
 
+extern int io_delay_type;
+extern void io_delay_init(void);
+
+static inline void slow_down_io(void)
+{
+	native_io_delay();
 #ifdef REALLY_SLOW_IO
-#define __FULL_SLOW_DOWN_IO __SLOW_DOWN_IO __SLOW_DOWN_IO __SLOW_DOWN_IO __SLOW_DOWN_IO
-#else
-#define __FULL_SLOW_DOWN_IO __SLOW_DOWN_IO
+	native_io_delay();
+	native_io_delay();
+	native_io_delay();
 #endif
+}
 
 /*
  * Talk about misusing macros..
@@ -51,21 +58,21 @@
 static inline void out##s(unsigned x value, unsigned short port) {
 
 #define __OUT2(s,s1,s2) \
-__asm__ __volatile__ ("out" #s " %" s1 "0,%" s2 "1"
+__asm__ __volatile__ ("out" #s " %" s1 "0,%" s2 "1" : : "a" (value), "Nd" (port))
 
 #define __OUT(s,s1,x) \
-__OUT1(s,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
-__OUT1(s##_p,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} \
+__OUT1(s,x) __OUT2(s,s1,"w"); } \
+__OUT1(s##_p,x) __OUT2(s,s1,"w"); slow_down_io(); }
 
 #define __IN1(s) \
 static inline RETURN_TYPE in##s(unsigned short port) { RETURN_TYPE _v;
 
 #define __IN2(s,s1,s2) \
-__asm__ __volatile__ ("in" #s " %" s2 "1,%" s1 "0"
+__asm__ __volatile__ ("in" #s " %" s2 "1,%" s1 "0" : "=a" (_v) : "Nd" (port))
 
-#define __IN(s,s1,i...) \
-__IN1(s) __IN2(s,s1,"w") : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
-__IN1(s##_p) __IN2(s,s1,"w") __FULL_SLOW_DOWN_IO : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
+#define __IN(s,s1) \
+__IN1(s) __IN2(s,s1,"w"); return _v; } \
+__IN1(s##_p) __IN2(s,s1,"w"); slow_down_io(); return _v; }
 
 #define __INS(s) \
 static inline void ins##s(unsigned short port, void * addr, unsigned long count) \
