diff -r -u --new-file custom-source-xen/include/asm-x86/mach-xen/asm/system_32.h custom-source-xen-x86-introduce-rdtsc_barrier.patch/include/asm-x86/mach-xen/asm/system_32.h
--- custom-source-xen/include/asm-x86/mach-xen/asm/system_32.h	2008-06-07 13:43:41.000000000 -0600
+++ custom-source-xen-x86-introduce-rdtsc_barrier.patch/include/asm-x86/mach-xen/asm/system_32.h	2008-06-07 13:41:28.000000000 -0600
@@ -5,6 +5,7 @@
 #include <asm/segment.h>
 #include <asm/cpufeature.h>
 #include <asm/cmpxchg.h>
+#include <asm/nops.h>
 #include <asm/synch_bitops.h>
 #include <asm/hypervisor.h>
 
@@ -291,6 +292,19 @@
 #define set_mb(var, value) do { var = value; barrier(); } while (0)
 #endif
 
+/*
+ * Stop RDTSC speculation. This is needed when you need to use RDTSC
+ * (or get_cycles or vread that possibly accesses the TSC) in a defined
+ * code region.
+ *
+ * (Could use an alternative three way for this if there was one.)
+ */
+static inline void rdtsc_barrier(void)
+{
+	alternative(ASM_NOP3, "mfence", X86_FEATURE_MFENCE_RDTSC);
+	alternative(ASM_NOP3, "lfence", X86_FEATURE_LFENCE_RDTSC);
+}
+
 #include <linux/irqflags.h>
 
 /*
diff -r -u --new-file custom-source-xen/include/asm-x86/mach-xen/asm/system_64.h custom-source-xen-x86-introduce-rdtsc_barrier.patch/include/asm-x86/mach-xen/asm/system_64.h
--- custom-source-xen/include/asm-x86/mach-xen/asm/system_64.h	2008-06-07 13:43:41.000000000 -0600
+++ custom-source-xen-x86-introduce-rdtsc_barrier.patch/include/asm-x86/mach-xen/asm/system_64.h	2008-06-07 13:40:55.000000000 -0600
@@ -4,6 +4,7 @@
 #include <linux/kernel.h>
 #include <asm/segment.h>
 #include <asm/cmpxchg.h>
+#include <asm/nops.h>
 
 #include <asm/synch_bitops.h>
 #include <asm/hypervisor.h>
@@ -176,6 +177,19 @@
 #define read_barrier_depends()	do {} while(0)
 #define set_mb(var, value) do { (void) xchg(&var, value); } while (0)
 
+/*
+ * Stop RDTSC speculation. This is needed when you need to use RDTSC
+ * (or get_cycles or vread that possibly accesses the TSC) in a defined
+ * code region.
+ *
+ * (Could use an alternative three way for this if there was one.)
+ */
+static inline void rdtsc_barrier(void)
+{
+	alternative(ASM_NOP3, "mfence", X86_FEATURE_MFENCE_RDTSC);
+	alternative(ASM_NOP3, "lfence", X86_FEATURE_LFENCE_RDTSC);
+}
+
 #define warn_if_not_ulong(x) do { unsigned long foo; (void) (&(x) == &foo); } while (0)
 
 #include <linux/irqflags.h>
diff -r -u --new-file custom-source-xen/include/asm-x86/mach-xen/asm/msr.h custom-source-xen.new/include/asm-x86/mach-xen/asm/msr.h
--- custom-source-xen/include/asm-x86/mach-xen/asm/msr.h	2008-06-07 13:56:12.000000000 -0600
+++ custom-source-xen.new/include/asm-x86/mach-xen/asm/msr.h	2008-06-07 13:52:35.000000000 -0600
@@ -165,6 +165,7 @@
 
 #ifndef __ASSEMBLY__
 #include <linux/errno.h>
+#include <asm/system_64.h>
 /*
  * Access to machine-specific registers (available on 586 and better only)
  * Note: the rd* operations modify the parameters directly (without using
