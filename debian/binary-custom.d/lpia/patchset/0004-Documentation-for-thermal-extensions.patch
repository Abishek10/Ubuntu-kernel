From e5654bce3a3fa6b9fd7b3673e5cae97a00f37be6 Mon Sep 17 00:00:00 2001
From: Sujith Thomas <sujith.thomas@intel.com>
Date: Wed, 12 Dec 2007 10:55:35 +0530
Subject: [PATCH] Documentation for thermal extensions

Signed-off-by: Sujith Thomas <sujith.thomas@intel.com>

Documentation for thermal extensions
---
 Documentation/ThermalExtensions.txt |  197 +++++++++++++++++++++++++++++++++++
 1 files changed, 197 insertions(+), 0 deletions(-)
 create mode 100644 Documentation/ThermalExtensions.txt

diff --git a/Documentation/ThermalExtensions.txt b/Documentation/ThermalExtensions.txt
new file mode 100644
index 0000000..87e7811
--- /dev/null
+++ b/Documentation/ThermalExtensions.txt
@@ -0,0 +1,197 @@
+Thermal extensions How-to
+=========================
+
+Written by Sujith Thomas <sujith.thomas@intel.com>
+
+Updated: 18 October 2007
+
+Copyright (c)  2007 Intel Corporation
+
+
+0. Introduction
+
+The thermal extensions provide a set of interfaces for thermal devices (sensors)
+to register with the thermal management solution and to be a part of it.
+This how-to focusses on enabling a new sensor to participate
+in thermal management.
+
+Thermal extensions expose a set of interfaces for sensor drivers to expose
+their attributes as well as devices associated with this sensor. This solution
+is platform independent and any type of sensor should be able to make use of the
+infrastructure.
+
+The main task of the thermal extensions is to expose sensor attributes as well
+as thermal events to the user space. In addition, attributes for controlling
+devices associated with a sensor is also exposed through sysfs. An intelligent
+thermal management application can make decisions based on inputs from sensor and
+throttle appropriate devices.
+
+1. Sysfs directory structure
+
+ The sysfs entry will be made under /sys/thermal and it will have the
+ following group of attributes.
+
+ -/sys/thermal/config       (thermal management related configuration)
+ -/sys/thermal/<TZ#>        (thermal zone related data)
+ -/sys/thermal/<TZ#>/<Group> (info about a device in a thermal zone)
+
+ 1.1 /sys/thermal/config
+
+ This folder has the following attributes
+
+ -mode (user = user-space thermal managemnt ; kernel = kernel-space thermal management)
+ -userenabled (0 if kernel is not willing to give control to application else 1)
+
+
+ 1.2 /sys/thermal/<TZ#>
+
+ The below attributes will appear for all thermal devices (sensors)
+
+ -critical      (critical temperature at which system will shutdown)
+ -hot           (temperature at which system will hibernate)
+ -passive       (temperature at which passive cooling will be started)
+ -temperature   (current temperature)
+ -cooling_mode  (active/passive)
+ -polling_freq  (frequency at which sensor is polled for temperature changes)
+ -state         (ok/critical/hot/passive/active[x])
+
+ The below attributes will appear only if Intel's platform sensor
+ driver is loaded.
+
+ -aux0        (lower AUX value interface for platform sensor driver)
+ -aux1        (upper AUX value interface for platform sensor driver)
+
+ 1.3 /sys/thermal/<TZ#>/<Group>
+
+ 'Group' entry depends on the registration of groups from 'thermal device driver'.
+ In the case of ACPI thermal driver, groups like 'thermalzone_devices',
+ 'active_device' & 'passive_devices' are created and devices are filled on
+ basis of what BIOS reports.
+
+2. Thermal device interface functions
+   ==================================
+
+There are a set of interface functions available for 'thermal device driver' to
+register with 'thermal sysfs driver'. 'Thermal device driver' is the driver
+which directly interacts with the sensor and has the list of devices associated
+with this sensor. 'Thermal sysfs driver' is the driver for exposing attributes
+of various sensors to userspace through sysfs.
+
+2.1 thermal_device_register
+/*
+ * thermal_device_register
+ * ------------------------
+ * Method for registering thermal devices(sensors) with sysfs
+ * name: The name that should appear in sysfs
+ * devdata : Device private context
+ * ops : List of call back functions for various attributes
+ */
+
+ This interface is used by 'Thermal device driver' to make an entry of the new
+ sensor to /sys/thermal folder. This step is mandatory.
+
+2.2 thermal_group_register
+/*
+ * thermal_group_register
+ * ------------------------
+ * Method for registering groups such as ACPI _TZD with sysfs
+ * name: The name that should appear in sysfs
+ * td : Device under which this group is to be created
+ * participant_count : No:of participants in this group
+ * participants: Pointer to an array of participants
+ */
+ This interface is used by 'Thermal device driver' to register a new 'group'
+ of devices. Example for groups are 'active devices' , 'passive devices' etc.
+ This step needs to be done only if there are a set of devices associated
+ with this sensor.
+
+2.3 thermal_attribute_register
+ /*
+  * thermal_attribute_register
+  * ------------------------
+  * Method for registering extra attributes with sysfs
+  * td : Device under which attributes should be created
+  * thermal_device_attrs : array of attributes to be added
+  */
+  This interface is used by 'Thermal device driver' to expose some of extra
+  attributes (other than standard attributes defined in thermal.h) with sysfs.
+
+2.4 thermal_event_register
+ /*
+  * thermal_event_register
+  * ----------------------
+  * Register for add/rmv of device/group/participant notification
+  * handler: thermal_event_handler containing callback func pointer
+  * report_type: Set this flag if callbacks needs to be invoked
+  * for existing device/group/participants
+  */
+  This inteface can be used by any driver to get notification about add/remove
+  of entities like 'thermal device', 'group' or 'devices within a group'.
+
+2.5 thermal_device_unregister
+ /*
+  * thermal_device_unregister
+  * ------------------------
+  * Method for unregistering thermal devices(sensors) with sysfs
+  * td: Pointer to thermal_device
+  */
+
+2.6 thermal_group_unregister
+ /*
+  * thermal_group_unregister
+  * ------------------------
+  * Method for unregistering groups within a thermal device
+  * td: Pointer to thermal_device from where the group should be removed
+  * name : Name of the group given during registration
+  */
+
+2.7 thermal_attribute_unregister
+ /*
+  * thermal_attribute_unregister
+  * ------------------------
+  * Method for unregistering extra attributes with sysfs
+  * td : Device under which attributes should be removed
+  * thermal_device_attrs : array of attributes to be removed
+  */
+
+2.8 thermal_event_unregister
+ /*
+  * thermal_event_unregister
+  * ----------------------
+  * UnRegister for add/rmv of device/group/participant notification
+  * handler: thermal_event_handler containing callback func pointer
+  * report_type: Set this flag if callbacks needs to be invoked
+  * for existing device/group/participants
+  */
+
+2.9 thermal_sysfs_generate_event
+ /*
+  * thermal_sysfs_generate_event
+  * ---------------------------
+  * Drivers managing thermal devices can invoke this method to notify
+  * user applications about thermal events
+  */
+  This interface can be used by 'thermal device drivers' to sent a
+  notification about trip point events to the user application.
+
+2.10 thermal_get_algo_mode
+ /*
+  * thermal_get_algo_mode
+  * ----------------------
+  * Method to know whether the user mode application has taken over
+  */
+
+2.11 thermal_set_userenabled
+ /*
+  * thermal_set_userenabled
+  * -----------------------
+  * Interface function for platform sensor driver to disble userspace algo
+  * ue: enable / disable userspace algo based on BIOS configuration
+  */
+  This can be called by any driver to prevent the overriding of thermal
+  management from userspace. One scenario is to call this API based on
+  enable/disable option given in BIOS.
+
+
+
+
-- 
1.5.3.7-dirty

