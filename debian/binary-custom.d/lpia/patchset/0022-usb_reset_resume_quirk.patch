#! /bin/sh /usr/share/dpatch/dpatch-run
diff --git a/drivers/usb/core/driver.c b/drivers/usb/core/driver.c
index c51f8e9..1a93989 100644
--- a/drivers/usb/core/driver.c
+++ b/drivers/usb/core/driver.c
@@ -866,6 +866,9 @@ static int usb_suspend_interface(struct usb_interface *intf, pm_message_t msg)
 	return status;
 }
 
+struct usb_hub;
+void hub_port_logical_disconnect(struct usb_hub *hub, int port1);
+
 /* Caller has locked intf's usb_device's pm_mutex */
 static int usb_resume_interface(struct usb_interface *intf, int reset_resume)
 {
@@ -894,9 +897,15 @@ static int usb_resume_interface(struct usb_interface *intf, int reset_resume)
 				dev_err(&intf->dev, "%s error %d\n",
 						"reset_resume", status);
 		} else {
-			// status = -EOPNOTSUPP;
+			struct usb_device		*udev = interface_to_usbdev(intf);
+			struct usb_device               *parent_hdev = udev->parent;
+			/* status = -EOPNOTSUPP; */
 			dev_warn(&intf->dev, "no %s for driver %s?\n",
 					"reset_resume", driver->name);
+			if (parent_hdev) {
+				struct usb_hub *parent_hub = usb_get_intfdata(parent_hdev->actconfig->interface[0]);
+				hub_port_logical_disconnect(parent_hub, udev->portnum);
+			}
 		}
 	} else {
 		if (driver->resume) {
@@ -905,7 +914,7 @@ static int usb_resume_interface(struct usb_interface *intf, int reset_resume)
 				dev_err(&intf->dev, "%s error %d\n",
 						"resume", status);
 		} else {
-			// status = -EOPNOTSUPP;
+			/* status = -EOPNOTSUPP; */
 			dev_warn(&intf->dev, "no %s for driver %s?\n",
 					"resume", driver->name);
 		}
diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c
index b04d232..ca269bb 100644
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -584,7 +584,7 @@ static int hub_port_disable(struct usb_hub *hub, int port1, int set_state)
  * time later khubd will disconnect() any existing usb_device on the port
  * and will re-enumerate if there actually is a device attached.
  */
-static void hub_port_logical_disconnect(struct usb_hub *hub, int port1)
+void hub_port_logical_disconnect(struct usb_hub *hub, int port1)
 {
 	dev_dbg(hub->intfdev, "logical disconnect on port %d\n", port1);
 	hub_port_disable(hub, port1, 1);
@@ -601,6 +601,7 @@ static void hub_port_logical_disconnect(struct usb_hub *hub, int port1)
 	set_bit(port1, hub->change_bits);
  	kick_khubd(hub);
 }
+EXPORT_SYMBOL(hub_port_logical_disconnect);
 
 /* caller has locked the hub device */
 static int hub_pre_reset(struct usb_interface *intf)
diff --git a/drivers/usb/core/quirks.c b/drivers/usb/core/quirks.c
index d42c561..d5e867d 100644
--- a/drivers/usb/core/quirks.c
+++ b/drivers/usb/core/quirks.c
@@ -45,6 +45,8 @@ static const struct usb_device_id usb_quirk_list[] = {
 	/* SKYMEDI USB_DRIVE */
 	{ USB_DEVICE(0x1516, 0x8628), .driver_info = USB_QUIRK_RESET_RESUME },
 
+	/* ASIX Ethernet device */
+	{ USB_DEVICE(0x0b95, 0x1720), .driver_info = USB_QUIRK_RESET_RESUME },
 	{ }  /* terminating entry must be last */
 };
 
