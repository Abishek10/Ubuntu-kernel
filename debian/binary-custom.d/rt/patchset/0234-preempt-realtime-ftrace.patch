---
 kernel/trace/ftrace.c             |    4 ++--
 kernel/trace/trace.c              |   10 +++++-----
 kernel/trace/trace.h              |    2 +-
 kernel/trace/trace_hist.c         |    2 +-
 kernel/trace/trace_irqsoff.c      |    2 +-
 kernel/trace/trace_sched_wakeup.c |    2 +-
 6 files changed, 11 insertions(+), 11 deletions(-)

Index: linux-2.6.24.7-rt21/kernel/trace/ftrace.c
===================================================================
--- linux-2.6.24.7-rt21.orig/kernel/trace/ftrace.c	2008-10-08 22:23:07.000000000 -0400
+++ linux-2.6.24.7-rt21/kernel/trace/ftrace.c	2008-10-08 22:23:57.000000000 -0400
@@ -39,7 +39,7 @@ static int last_ftrace_enabled;
  */
 static int ftrace_disabled __read_mostly;
 
-static DEFINE_SPINLOCK(ftrace_lock);
+static DEFINE_RAW_SPINLOCK(ftrace_lock);
 static DEFINE_MUTEX(ftrace_sysctl_lock);
 
 static struct ftrace_ops ftrace_list_end __read_mostly =
@@ -166,7 +166,7 @@ static struct hlist_head ftrace_hash[FTR
 
 static DEFINE_PER_CPU(int, ftrace_shutdown_disable_cpu);
 
-static DEFINE_SPINLOCK(ftrace_shutdown_lock);
+static DEFINE_RAW_SPINLOCK(ftrace_shutdown_lock);
 static DEFINE_MUTEX(ftraced_lock);
 static DEFINE_MUTEX(ftrace_regex_lock);
 
Index: linux-2.6.24.7-rt21/kernel/trace/trace.c
===================================================================
--- linux-2.6.24.7-rt21.orig/kernel/trace/trace.c	2008-10-08 22:23:11.000000000 -0400
+++ linux-2.6.24.7-rt21/kernel/trace/trace.c	2008-10-08 22:23:57.000000000 -0400
@@ -223,8 +223,8 @@ static const char *trace_options[] = {
  * This is defined as a raw_spinlock_t in order to help
  * with performance when lockdep debugging is enabled.
  */
-static raw_spinlock_t ftrace_max_lock =
-	(raw_spinlock_t)__RAW_SPIN_LOCK_UNLOCKED;
+static __raw_spinlock_t ftrace_max_lock =
+	(__raw_spinlock_t)__RAW_SPIN_LOCK_UNLOCKED;
 
 /*
  * Copy the new maximum trace into the separate maximum-trace
@@ -654,7 +654,7 @@ static unsigned map_pid_to_cmdline[PID_M
 static unsigned map_cmdline_to_pid[SAVED_CMDLINES];
 static char saved_cmdlines[SAVED_CMDLINES][TASK_COMM_LEN];
 static int cmdline_idx;
-static DEFINE_SPINLOCK(trace_cmdline_lock);
+static DEFINE_RAW_SPINLOCK(trace_cmdline_lock);
 
 /* temporary disable recording */
 atomic_t trace_record_cmdline_disabled __read_mostly;
@@ -3355,8 +3355,8 @@ __init static int tracer_alloc_buffers(v
 		/* use the LRU flag to differentiate the two buffers */
 		ClearPageLRU(page);
 
-		data->lock = (raw_spinlock_t)__RAW_SPIN_LOCK_UNLOCKED;
-		max_tr.data[i]->lock = (raw_spinlock_t)__RAW_SPIN_LOCK_UNLOCKED;
+		data->lock = (__raw_spinlock_t)__RAW_SPIN_LOCK_UNLOCKED;
+		max_tr.data[i]->lock = (__raw_spinlock_t)__RAW_SPIN_LOCK_UNLOCKED;
 
 /* Only allocate if we are actually using the max trace */
 #ifdef CONFIG_TRACER_MAX_TRACE
Index: linux-2.6.24.7-rt21/kernel/trace/trace.h
===================================================================
--- linux-2.6.24.7-rt21.orig/kernel/trace/trace.h	2008-10-08 22:23:09.000000000 -0400
+++ linux-2.6.24.7-rt21/kernel/trace/trace.h	2008-10-08 22:23:57.000000000 -0400
@@ -162,7 +162,7 @@ struct trace_entry {
 struct trace_array_cpu {
 	struct list_head	trace_pages;
 	atomic_t		disabled;
-	raw_spinlock_t		lock;
+	__raw_spinlock_t	lock;
 	struct lock_class_key	lock_key;
 
 	/* these fields get copied into max-trace: */
Index: linux-2.6.24.7-rt21/kernel/trace/trace_hist.c
===================================================================
--- linux-2.6.24.7-rt21.orig/kernel/trace/trace_hist.c	2008-10-08 22:23:08.000000000 -0400
+++ linux-2.6.24.7-rt21/kernel/trace/trace_hist.c	2008-10-08 22:23:57.000000000 -0400
@@ -412,7 +412,7 @@ int tracing_wakeup_hist __read_mostly = 
 static unsigned wakeup_prio = (unsigned)-1 ;
 static struct task_struct *wakeup_task;
 static cycle_t wakeup_start;
-static DEFINE_SPINLOCK(wakeup_lock);
+static DEFINE_RAW_SPINLOCK(wakeup_lock);
 
 notrace void tracing_hist_wakeup_start(struct task_struct *p,
 				       struct task_struct *curr)
Index: linux-2.6.24.7-rt21/kernel/trace/trace_irqsoff.c
===================================================================
--- linux-2.6.24.7-rt21.orig/kernel/trace/trace_irqsoff.c	2008-10-08 22:23:08.000000000 -0400
+++ linux-2.6.24.7-rt21/kernel/trace/trace_irqsoff.c	2008-10-08 22:23:57.000000000 -0400
@@ -24,7 +24,7 @@ static int				tracer_enabled __read_most
 
 static DEFINE_PER_CPU(int, tracing_cpu);
 
-static DEFINE_SPINLOCK(max_trace_lock);
+static DEFINE_RAW_SPINLOCK(max_trace_lock);
 
 enum {
 	TRACER_IRQS_OFF		= (1 << 1),
Index: linux-2.6.24.7-rt21/kernel/trace/trace_sched_wakeup.c
===================================================================
--- linux-2.6.24.7-rt21.orig/kernel/trace/trace_sched_wakeup.c	2008-10-08 22:23:06.000000000 -0400
+++ linux-2.6.24.7-rt21/kernel/trace/trace_sched_wakeup.c	2008-10-08 22:23:57.000000000 -0400
@@ -26,7 +26,7 @@ static struct task_struct	*wakeup_task;
 static int			wakeup_cpu;
 static unsigned			wakeup_prio = -1;
 
-static DEFINE_SPINLOCK(wakeup_lock);
+static DEFINE_RAW_SPINLOCK(wakeup_lock);
 
 static void __wakeup_reset(struct trace_array *tr);
 
