From: Steven Rostedt <srostedt@redhat.com>
Subject: rcupreempt trace update to new markers

Update the rcupreempt tracing with the new markers.

Signed-off-by: Steven Rostedt <srostedt@redhat.com>
---
 include/linux/rcupreempt_trace.h |    8 ++++----
 kernel/rcupreempt_trace.c        |   21 +++++++++------------
 2 files changed, 13 insertions(+), 16 deletions(-)

Index: linux-2.6.24.7-rt27/include/linux/rcupreempt_trace.h
===================================================================
--- linux-2.6.24.7-rt27.orig/include/linux/rcupreempt_trace.h	2009-02-08 00:04:03.000000000 -0500
+++ linux-2.6.24.7-rt27/include/linux/rcupreempt_trace.h	2009-02-08 00:04:40.000000000 -0500
@@ -76,8 +76,8 @@ struct rcupreempt_probe_data {
 };
 
 #define DEFINE_RCUPREEMPT_MARKER_HANDLER(rcupreempt_trace_worker) \
-void rcupreempt_trace_worker##_callback(const struct marker *mdata, \
-				void *private_data, const char *format, ...) \
+void rcupreempt_trace_worker##_callback(void *private_data, void *call_data, \
+					const char *format, va_list *args) \
 { \
 	struct rcupreempt_trace *trace; \
 	trace = (&per_cpu(trace_data, smp_processor_id())); \
@@ -113,8 +113,8 @@ struct preempt_rcu_boost_trace {
 };
 
 #define DEFINE_PREEMPT_RCU_BOOST_MARKER_HANDLER(preempt_rcu_boost_var) \
-void preempt_rcu_boost_var##_callback(const struct marker *mdata, \
-				void *private_data, const char *format, ...) \
+void preempt_rcu_boost_var##_callback(void *private_data, void *call_data, \
+				const char *format, va_list *args) \
 { \
 	struct preempt_rcu_boost_trace *boost_trace; \
 	boost_trace = (&per_cpu(boost_trace_data, smp_processor_id())); \
Index: linux-2.6.24.7-rt27/kernel/rcupreempt_trace.c
===================================================================
--- linux-2.6.24.7-rt27.orig/kernel/rcupreempt_trace.c	2009-02-08 00:04:03.000000000 -0500
+++ linux-2.6.24.7-rt27/kernel/rcupreempt_trace.c	2009-02-08 00:04:40.000000000 -0500
@@ -536,10 +536,6 @@ static int __init rcupreempt_trace_init(
 		if (ret)
 			printk(KERN_INFO "Unable to register rcupreempt \
 				probe %s\n", rcupreempt_probe_array[i].name);
-		ret = marker_arm(p->name);
-		if (ret)
-			printk(KERN_INFO "Unable to arm rcupreempt probe %s\n",
-				p->name);
 	}
 	printk(KERN_INFO "RCU Preempt markers registered\n");
 
@@ -552,10 +548,6 @@ static int __init rcupreempt_trace_init(
 		if (ret)
 			printk(KERN_INFO "Unable to register Preempt RCU Boost \
 			probe %s\n", preempt_rcu_boost_probe_array[i].name);
-		ret = marker_arm(p->name);
-		if (ret)
-			printk(KERN_INFO "Unable to arm Preempt RCU Boost \
-				markers %s\n", p->name);
 }
 #endif /* CONFIG_PREEMPT_RCU_BOOST */
 
@@ -573,14 +565,19 @@ static void __exit rcupreempt_trace_clea
 {
 	int i;
 
-	for (i = 0; i < ARRAY_SIZE(rcupreempt_probe_array); i++)
-		marker_probe_unregister(rcupreempt_probe_array[i].name);
+	for (i = 0; i < ARRAY_SIZE(rcupreempt_probe_array); i++) {
+		struct rcupreempt_probe_data *p = &rcupreempt_probe_array[i];
+		marker_probe_unregister(p->name, p->probe_func, p);
+	}
 	printk(KERN_INFO "RCU Preempt markers unregistered\n");
 
 #ifdef CONFIG_PREEMPT_RCU_BOOST
 	rcu_trace_boost_destroy();
-	for (i = 0; i < ARRAY_SIZE(preempt_rcu_boost_probe_array); i++)
-		marker_probe_unregister(preempt_rcu_boost_probe_array[i].name);
+	for (i = 0; i < ARRAY_SIZE(preempt_rcu_boost_probe_array); i++) {
+		struct preempt_rcu_boost_probe *p = \
+					&preempt_rcu_boost_probe_array[i];
+		marker_probe_unregister(p->name, p->probe_func, p);
+	}
 	printk(KERN_INFO "Preempt RCU Boost markers unregistered\n");
 #endif /* CONFIG_PREEMPT_RCU_BOOST */
 	debugfs_remove(statdir);
