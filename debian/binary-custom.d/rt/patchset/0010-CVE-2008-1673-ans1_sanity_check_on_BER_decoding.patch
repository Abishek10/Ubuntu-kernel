Subject: asn1: additional sanity checking during BER decoding

From: Chris Wright <chrisw@sous-sol.org>

X-Git-Tag: v2.6.26-rc6~100
X-Git-Url: http://git.kernel.org/?p=linux%2Fkernel%2Fgit%2Ftorvalds%2Flinux-2.6.git;a=commitdiff_plain;h=ddb2c43594f22843e9f3153da151deaba1a834c5

asn1: additional sanity checking during BER decoding

- Don't trust a length which is greater than the working buffer.
  An invalid length could cause overflow when calculating buffer size
  for decoding oid.

- An oid length of zero is invalid and allows for an off-by-one error when
  decoding oid because the first subid actually encodes first 2 subids.

- A primitive encoding may not have an indefinite length.

Thanks to Wei Wang from McAfee for report.

Cc: Steven French <sfrench@us.ibm.com>
Cc: stable@kernel.org
Acked-by: Patrick McHardy <kaber@trash.net>
Signed-off-by: Chris Wright <chrisw@sous-sol.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---

 fs/cifs/asn1.c                         |   14 ++++++++++++++
 net/ipv4/netfilter/nf_nat_snmp_basic.c |   14 ++++++++++++++
 2 files changed, 28 insertions(+)

Index: hardy/fs/cifs/asn1.c
===================================================================
--- hardy.orig/fs/cifs/asn1.c	2008-11-18 16:01:47.000000000 +0100
+++ hardy/fs/cifs/asn1.c	2008-11-21 16:58:53.000000000 +0100
@@ -443,6 +443,11 @@
 			return 0;
 		}
 	}
+
+	/* don't trust len bigger than ctx buffer */
+	if (*len > ctx->end - ctx->pointer)
+		return 0;
+
 	return 1;
 }
 
Index: hardy/net/ipv4/netfilter/nf_nat_snmp_basic.c
===================================================================
--- hardy.orig/net/ipv4/netfilter/nf_nat_snmp_basic.c	2008-11-18 16:01:47.000000000 +0100
+++ hardy/net/ipv4/netfilter/nf_nat_snmp_basic.c	2008-11-21 16:58:53.000000000 +0100
@@ -490,6 +490,11 @@
 			return 0;
 		}
 	}
+
+	/* don't trust len bigger than ctx buffer */
+	if (*len > ctx->end - ctx->pointer)
+		return 0;
+
 	return 1;
 }
 
