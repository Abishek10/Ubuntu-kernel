From 46a77f70fc1a6f11c01eb8265feea0ab93c3cbac Mon Sep 17 00:00:00 2001
From: Sebastian Siewior <bigeasy@linutronix.de>
Date: Fri, 18 Apr 2008 17:02:27 +0200
Subject: [PATCH] m68knommu: add cmpxchg in default fashion

not RT-safe, generic

Signed-off-by: Sebastian Siewior <bigeasy@linutronix.de>
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
---
 include/asm-m68knommu/system.h |   34 +++++++++++++++++++++++++---------
 1 file changed, 25 insertions(+), 9 deletions(-)

Index: linux-2.6.24.7-rt21/include/asm-m68knommu/system.h
===================================================================
--- linux-2.6.24.7-rt21.orig/include/asm-m68knommu/system.h	2008-10-08 22:22:38.000000000 -0400
+++ linux-2.6.24.7-rt21/include/asm-m68knommu/system.h	2008-10-08 22:23:29.000000000 -0400
@@ -192,20 +192,36 @@ static inline unsigned long __xchg(unsig
  * indicated by comparing RETURN with OLD.
  */
 #define __HAVE_ARCH_CMPXCHG	1
+extern unsigned long __cmpxchg_called_with_bad_pointer(volatile void *p,
+		unsigned long old, unsigned long new, int size);
 
-static __inline__ unsigned long
-cmpxchg(volatile int *p, int old, int new)
+static inline unsigned long
+__cmpxchg(volatile void *ptr, unsigned long old, unsigned long new, int size)
 {
-	unsigned long flags;
-	int prev;
+	unsigned long flags, prev;
+	volatile unsigned int *p = ptr;
 
-	local_irq_save(flags);
-	if ((prev = *p) == old)
-		*p = new;
-	local_irq_restore(flags);
-	return(prev);
+	if (size == 4) {
+
+		local_irq_save(flags);
+		if ((prev = *p) == old)
+			*p = new;
+		local_irq_restore(flags);
+		return prev;
+	}
+
+	/* we should not get here, if you do we end up with a linker error */
+	return __cmpxchg_called_with_bad_pointer(p, old, new, size);
 }
 
+#define cmpxchg(ptr,o,n)					\
+	({							\
+	 __typeof__(*(ptr)) _o_ = (o);				\
+	 __typeof__(*(ptr)) _n_ = (n);				\
+	 (__typeof__(*(ptr))) __cmpxchg((ptr), (unsigned long)_o_,	\
+		 (unsigned long)_n_, sizeof(*(ptr)));			\
+	 })
+
 
 #ifdef CONFIG_M68332
 #define HARD_RESET_NOW() ({		\
