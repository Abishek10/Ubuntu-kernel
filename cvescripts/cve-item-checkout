#!/usr/bin/python
#==============================================================================
# Author: Stefan Bader <stefan.bader@canonical.com>
# Copyright (C) 2010
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 3 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.
#==============================================================================
import sys, os, optparse
from cvescripts_lib import *
from buildenv_lib import *

parser = optparse.OptionParser("Usage: %prog [options] <workitem>")
dsc  = "Switch back to work on a certain workitem which must have been "
dsc += "saved before."
parser.set_description(dsc)
(opts, args) = parser.parse_args()

#------------------------------------------------------------------------------
# There should be only one positional argument/item.
#------------------------------------------------------------------------------
if len(args) != 1:
	parser.print_usage()
	sys.exit(1)

id = args[0]
if not WorkItemNameValid(id):
	print "EE: " + id + " is not a valid work item name!"
	sys.exit(1)

#------------------------------------------------------------------------------
# Check whether the workitem has been saved.
#------------------------------------------------------------------------------
savedir = GetSaveDir(id, create=False)
if not os.path.isdir(savedir):
	print "EE: Cannot switch back to", id, "as it has not been saved!"
	sys.exit(1)

owd = os.getcwd()
os.chdir(tracker_dir)
try:
	cve = cve_lib.find_cve(id)
except:
	print "EE: Workitem", id, "not found in the CVE tracker!"
	sys.exit(1)
cve = os.path.join(tracker_dir, cve)
os.chdir(owd)

print "II: Checking all workareas to be clean..."
if not IsWorkareaClean():
	print "EE: Refusing to start a new task while workarea is unclean"
	sys.exit(1)

#------------------------------------------------------------------------------
# Try creating new branches in all workareas.
#------------------------------------------------------------------------------
for area in ListWorkareas():
	series, package = area.split(os.path.sep, 1)

	print "II: Switching branches in", area
	if not os.path.isdir(area):
		print "EE: Working area", area, "does not exist!"
		sys.exit(1)

	os.chdir(area)
	if os.system("git checkout -q " + id):
		print "EE: Branch checkout failed!"
		sys.exit(1)
	os.chdir(owd)

#------------------------------------------------------------------------------
# Make current-item a link to the CVE file.
#------------------------------------------------------------------------------
if os.path.exists("current-item"):
	os.unlink("current-item")
os.symlink(cve, "current-item")


