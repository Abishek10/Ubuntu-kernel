#!/usr/bin/python
#==============================================================================
# Author: Stefan Bader <stefan.bader@canonical.com>
# Copyright (C) 2010
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 3 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.
#==============================================================================
import sys, os
import optparse
from cvescripts_lib import *
import cve_lib

parser = optparse.OptionParser("Usage: %prog [options] <CVE>|<Bug#>")
dsc = "Start working on the given CVE (CVE-xxxx-yyyy) or bug (BUG-#)"
parser.add_option("-f", "--force", action="store_true", dest="force",
	default=False, help="Throw away exising work and start over!")
parser.set_description(dsc)
(opts, args) = parser.parse_args()

if len(args) != 1:
	parser.print_usage()
	sys.exit(1)

id = args[0]
if len(id) == 13 and id[0:4] == "CVE-":
	if id[8] != "-":
		raise NameError("CVE-xxxx-yyyy")
elif args[0][1:3] == "BUG-":
	print id
elif id == "security":
	pass
else:
	print "EE: " + args[0] + " must be either CVE-xxxx-yyyy or BUG-#"
	sys.exit(1)

def CreateBranch(series, package, name):
	version = GetUploadVersion(series, PkgList[series][package])
	print "  - " + package + "(" + version + ") -> " + id
	if name in GitListBranches():
		if opts.force == False:
			print "    EE: Branch " + name + " already exists"
			raise BranchExists()
		else:
			print "    WW: Trhowing away previous " + name
			os.system("git checkout -q master >/dev/null")
			os.system("git branch -D " + name + " >/dev/null")
	cmd = "git checkout -q -b " + name + " Ubuntu-" + version
	os.system(cmd)

for series in ListSupportedSeries():
	if not series in PkgList.keys():
		continue
	print "*", series
	for package in sorted(PkgList[series].keys()):
		try:
			owd = os.getcwd()
			os.chdir(os.path.join(series, package))
			try:
				CreateBranch(series, package, id)
			except:
				print "EE: CreateBranch() failed!"
				sys.exit(1)
			else:
				os.chdir(owd)
		except:
			sys.exit(1)
		else:
			pass
