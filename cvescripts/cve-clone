#!/usr/bin/python
#==============================================================================
# Author: Stefan Bader <stefan.bader@canonical.com>
# Copyright (C) 2010
#
# This script is distributed under the terms and conditions of the GNU General
# Public License, Version 3 or later. See http://www.gnu.org/copyleft/gpl.html
# for details.
#==============================================================================
import sys, os
import optparse
import cvescripts_lib
import cve_lib

print
print "This will create clones of all central repositories in the current"
print "directory. Are you sure you want to continue? (N,y)",
#line = sys.stdin.readline()
print "\b"
#if line[0] != "y":
#	sys.exit(0)

def CloneRepo(series, repo):
	cmd = "git clone "

	# This is a kernel repository potentially we could use a reference
	if repo == "ubuntu-" + series:
		if cvescripts_lib.kernel_reference != "":
			cmd += "--reference "
			cmd += cvescripts_lib.kernel_reference + " "

	cmd += cvescripts_lib.repo_host + ":"
	cmd += os.path.join(cvescripts_lib.repo_path, series, repo)

	os.system(cmd)

for series in cve_lib.releases:
	if series in cve_lib.eol_releases:
		continue
	if not os.path.exists(series):
		print "Creating " + series
		os.mkdir(series)
	os.chdir(series)
	print "Fetching repositories for {0}".format(series)
	for repo in cvescripts_lib.ListRepos(series):
		if not os.path.exists(os.path.join(repo, ".git")):
			if os.path.exists(repo):
				print "Removing {0}/{1}".format(series, repo)
				print "rm -rf {0}/{1}".format(series, repo)
			print " - Cloning {0}".format(repo)
			CloneRepo(series, repo)
	os.chdir("..")


