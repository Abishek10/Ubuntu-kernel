#!/bin/bash
function ScriptUsage()
{
	echo "    Usage: $(basename $0) [<options>] <system|group> [...]"
}

function ScriptSpecificHelp()
{
	echo
}

CMDDIR=$(dirname $0)
. $CMDDIR/build-common

if [ "$1" = "" ]; then
	ScriptUsage
	exit 1
fi

function BuildStart()
{
	GetHostEnvironment $1 2>/dev/null
	if [ $? -ne 0 ]; then
		printf "%-15s: [not configured]\n" $1
		return 1
	fi

	status=$($CMDDIR/build-check --dist $DIST ${SYSNAME})
	if [ $? -ne 0 ]; then
		printf "%-15s: [$status]\n" ${SYSNAME}
		return 1
	fi

	if [ "$CONCURRENCY" != "" ]; then
		ARGS="-c$CONCURRENCY"
	else
		ARGS=""
	fi
	if $AUTOBUILD; then
		ARGS="$ARGS -a"
	fi
	if [ "$BUILDTARGET" = "lum" ]; then
		ARGS="$ARGS --lum"
	fi
	scp -q $(dirname $0)/target-scripts/run-build ${HOST}:${BASEDIR}
	if [ $? -eq 0 ]; then
		ssh ${HOST} screen -d -m $CHROOTCMD bash -i \
			$BASEDIR/run-build $ARGS
		printf "%-15s: [${BUILDTARGET} build started]\n" $SYSNAME
	else
		printf "%-15s: [%s not found]\n" $SYSNAME $BASEDIR
	fi
}

for TARGET in $(ExpandHostGroups $@); do
	BuildStart $TARGET
done

exit 0

