#!/bin/bash
function ScriptUsage()
{
	echo "    Usage: $(basename $0) [<options>] <system> [...]"
}

function ScriptSpecificHelp()
{
	echo
}

. $(dirname $0)/build-common

HOST="$1"
if [ "${HOST}" = "" ]; then
	ScriptUsage
	exit 1
fi

CMD='if [ "`type -p dpkg-architecture`" != "" ]; then
	echo HOSTARCH="`dpkg-architecture -qDEB_BUILD_ARCH`";
else
	echo HOSTARCH="`dpkg --print-architecture`";
fi;
if [ "`schroot -l 2>/dev/null`" != "" ]; then
	CHROOTCMD="schroot";
elif [ "`dchroot -l 2>/dev/null`" != "" ]; then
	CHROOTCMD="dchroot";
else
	exit 1;
fi;
echo "CHROOTCMD=$CHROOTCMD";

if [ `id -u` -ne 0 ]; then
	echo "FAKEROOT=fakeroot";
else
	echo "FAKEROOT=\"\"";
fi;
echo "BASE=$HOME"'

HOSTINFO=$(echo $CMD | ssh ${HOST} -oConnectTimeout=60)

case $? in
	255)
		echo "Connection to ${HOST} faile (timeout)!" >&2
		exit 1
		;;
	1)
		echo "No supported chroot command found!" >&2
		exit 1
		;;
	0)
		;;
	*)
		echo "Unknown error on ${HOST}!" >&2
		exit 1
		;;
esac

eval "$HOSTINFO"
case $HOSTARCH in
	amd64)
		ARCHS='amd64 i386 lpia'
	;;
	i?86)
		ARCHS='i386 lpia'
		;;
	*)
		ARCHS=$HOSTARCH
		;;
esac

cat <<EOD >"${CONFDIR}/hosts/$(echo ${HOST}|cut -d. -f1)"
$HOSTINFO
ARCHS='$ARCHS'
HOST=$HOST
EOD
