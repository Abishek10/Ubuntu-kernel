#!/bin/bash

# dependency: dialog
if [ ! -x /usr/bin/dialog ]; then
       echo "sorry this program requires the dialog package to be installed.";
       exit 1;
fi


cleanup() {
    # remove all the temp files that were created.
    rm -f $TEMPDIR/ignore.* 2>&1 1>/dev/null

    # any function to copy results from $HOME/results/$UUID should go here. 
    # A progress bar needs to be added as well. 
    copy_files /var/log $UBUNTULOG/after
}

# copy files with a progress indicator.
# srcdir @1 should be something like /var/log do not end it with a / or *
# destdir @2 should be something like /tmp/test do not end it with a / or .
copy_files() {
    local srcdir=($1/*)
    local destdir=$2
    local nfiles=${#srcdir[*]};
    local count=0

    dialog --title "Copying log files" --guage "Copying file ..." 16 70 < <(

    for cpfile in "${srcdir[@]}"
    do
        progress=$((100*(++count)/nfiles))
cat <<EOF
XXX
$progress
Copying "$cpfile" ...
XXX
EOF
    sudo /bin/cp $cpfile $destdir/. &>/dev/null
    done
    )
    clear
}

# call cleanup function on program exit.
trap "cleanup" 0

quit_kernel_qa() {
    # The following lines are to try to make sure that everything
    # is sync'd to the flash drive before we try to runt the database
    # script which will use that data.
    #
    sync;sudo sync
    sleep 2
    sync;sudo sync

    # For the following line to work properly, this script must
    # be run from the kernel-qa directory.
    #
    sudo python $HOME/kernel-qa-tests/CRImports $HOME/kernel-qa-tests/Canonical.cfg $TEMPDIR
    exit 0
}


display_info_msg() {
    dialog --backtitle "Ubuntu Compatibility Testing" \
           --title " $1 " \
           --msgbox " $2 " 15 70 
    return $?
}


# prompt the user to answer a yes/no question.
tst_prompt() {
    dialog --title "$TEST" --clear --yes-label "test" --no-label "skip" --yesno "$1" 16 70
    return $?
}

tst_result_prompt() {
    dialog --title "$TEST" --clear --yesno "$1" 16 70
    return $?
}

# flash a 2 second message to the user
tst_msg() {
    dialog --sleep $2 --title "$TEST" --infobox "$1" 16 70
    return $?
}


# log test result PASS to logfile
tst_pass() {
   echo "$TEST:succcess" >> $QALOG/testresult
   sudo sync
   return
}


# log test result FAIL to logfile
tst_fail() {
   echo "$TEST:failure" >> $QALOG/testresult
   sudo sync
   return
}


# log test result SKIPPED to logfile
tst_skip() {
   echo "$TEST:skip" >> $QALOG/testresult
   sudo sync
   return
}


# update results file with pass or fail info, incase of fail, generate the 
# apport report file.
tst_reslog() {
    local report_name=$(echo -n "$TEST" | sed -e 's/:/-/g' | sed -e 's/ /-/g' | sed -e 's/\///g')
    case $1 in
    0) \
        tst_pass
        ;;
    *) \
       tst_fail

       display_info_msg "Failure in $2 " "You reported the test ~:: $TEST ::~ failed, \
                         you will see additional windows that may pop-up and ask a \
                         few questions. This will help us collect data that \
                         can be used in analyzing this failure."

       apport-bug $2 --save $QALOG/$2.$report_name.apport
       ;;
    esac
}

#collect log files after test is complete.
tst_dmesg() {
    local report_name=$(echo -n "$TEST" | sed -e 's/:/-/g' | sed -e 's/ /-/g' | sed -e 's/\///g')
    sudo dmesg 2>&1 1> $QALOG/$report_name.dmesg
}
    

about_kernel_qa() {
    dialog --backtitle "Ubuntu Compatibility Testing" \
           --title "About" \
           --msgbox "You will be given a menu of simple tests to run. The time required for testing is no more than 20mts. In case a test fails log information from /varlog will be collected which will help us determine cause of failure.We are focusing on commonly used functions like audio, video, suspend resume etc, these tests are non-destructive, and *will not* access your personal information on your hard drive. Through simple tests we can make sure that our latest kernel works with your hardware. Thank you for your time and effort." 15 70
    return $?
}


disp_results() {
    local RESULTS=$(cat $QALOG/testresult)

    if [ -z "$RESULTS" ] ; then
        RESULTS="Sorry, No results to display. Please run tests first."
    fi

    dialog --backtitle "Ubuntu Compatibility Testing" \
           --title "Test Results" \
           --msgbox "$RESULTS" 15 70 \
                  2>$TEMPDIR/ignore.disp_results || RC=$?
    return $?
}


run_kernel_qa() {
    local RC=0
    local i=" "
    local testcase=" "
    local testsuite=" "
    local testlist=" "
    local testchoice=" "

    if ! [ -d $TESTDIR/tests ] 
    then 
	display_info_msg "ERROR!" " \
            Unable to find the test directory.\
            Please verify the integrity of this package."
	return
    fi 

    LIST=$(for i in `ls -1 -A $TESTDIR/tests/*`; do j=`basename $i` ; echo -n " $j \"\" on "; done)
    dialog --backtitle "Ubuntu Compatibility Testing"\
           --title "Start Ubuntu Compatibility Testing" --clear \
           --checklist "To unselect/skip tests, use [SPACEBAR]" 20 80 5 \
    	    $LIST \
            2>$TEMPDIR/ignore.run_kernel_qa || RC=$?

            dialog --clear ;

    case $RC in
        0) \
            testchoice=$(cat $TEMPDIR/ignore.run_kernel_qa | sed -e 's/"//g')
            for testsuite in $testchoice; do
                testlist=$(head -n1 $TESTDIR/tests/$testsuite | sed -e 's/^#//g')
                source $TESTDIR/tests/$testsuite
                for testcase in $testlist; do $testcase; done
            done
                            
            return ;;
        1)    \
            #Cancel pressed
            return ;;
        255)    \
            #ESC pressed
            return ;;
    esac
}

UUID=$(uuidgen)
TESTDIR=$(dirname $0)

RESULTS=${HOME}/results
TEMPDIR=${RESULTS}/$UUID
UBUNTULOG=${TEMPDIR}/ubuntu-log
QALOG=${TEMPDIR}/qa-log
if [ ! -e $RESULTS ]; then
    ERR=$(mkdir -p $RESULTS 2>&1)
    if ! [ -z "$ERR" ]; then
        display_info_msg "ERROR!" "$ERR"
        exit 0
    fi
fi

if [ ! -e $TEMPDIR ]; then
    ERR=$(mkdir $TEMPDIR 2>&1)
    if ! [ -z "$ERR" ]; then
        display_info_msg "ERROR!" "$ERR"
        exit 0
    fi
fi

rm -f $RESULTS/current
ln -s $TEMPDIR $RESULTS/current

ERR=$(mkdir -p $UBUNTULOG)
if ! [ -z "$ERR" ]; then
    display_info_msg "ERROR!" "$ERR"
    exit 0
else
    mkdir -p $UBUNTULOG/before
    mkdir -p $UBUNTULOG/after
fi 

ERR=$(mkdir -p $QALOG)
if ! [ -z "$ERR" ]; then
    display_info_msg "ERROR!" "$ERR"
    exit 0
fi

#collect the system logs
copy_files /var/log $UBUNTULOG/before

#collect all audio card information
copy_files /proc/asound/card*/ $UBUNTULOG/before

#collect system information 
for sysinfo in "dmesg" "lspci -vvnn" "lsusb -vv" "dmidecode" ; do
    sudo $sysinfo 2>&1 1>$UBUNTULOG/before/$(echo -n $sysinfo | sed -e 's/ //g').log
done

# wait in a loop until user hits [Cancel] button on the main menu.
while :
do
    RC=0
    dialog --clear
    dialog --backtitle "Welcome to Ubuntu Compatibility Testing" \
           --title "Main Menu" \
           --menu "Move using[UP] [DOWN], Select using [ENTER]" 15 70 10 \
                  Test         "Start Ubuntu Compatibility Testing" \
                  Results      "Display a summary of test results" \
                  About        "About Ubuntu Compatibility Testing" \
                  Quit         "Quit Ubuntu Compatibility Testing" \
                  2>$TEMPDIR/ignore.mainmenu || RC=$?

    case $RC in 
        0) mmenu_item=`cat $TEMPDIR/ignore.mainmenu` ;
           # echo "return code = $RC" ;
           # echo "MENU ITEM = $mmenu_item" ;
           case $mmenu_item in
                Test)         run_kernel_qa     ;;
                Results)      disp_results      ;;
                About)        about_kernel_qa   ;;
                Quit)         quit_kernel_qa    ;;
           esac ;;

        1) display_info_msg "Good Bye!" \
                            "Thank you participating in the   \
                             Ubuntu compatibility test effort. \
                             We really appreciate your time."
           break;;

        255) display_info_msg "Good Bye!" \
                            "Thank you participating in the   \
                             Ubuntu compatibility test effort. \
                             We really appreciate your time."
            break;;
    esac
done


