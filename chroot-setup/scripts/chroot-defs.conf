
export MAIN_ARCHIVE=http://archive.ubuntu.com/ubuntu
export SRC_ARCHIVE=http://archive.ubuntu.com/ubuntu

export ARCHIVE_PORTS=http://ports.ubuntu.com/ubuntu-ports
export SRC_ARCHIVE_PORTS=http://ports.ubuntu.com/ubuntu-ports

export DEF_DIR=usr3
export CH_ROOT=/${DEF_DIR}/chroots

releases=([0]=dapper [1]=hardy [2]=jaunty [3]=karmic [4]=lucid [5]=maverick)
arches[0]="i386 amd64"
arches[1]="i386 amd64 lpia"
arches[2]="i386 amd64 lpia"
arches[3]="i386 amd64 lpia"
arches[4]="i386 amd64 armel"
arches[5]="i386 amd64 armel"

pockets[0]="release security updates"
pockets[1]="release security updates"
pockets[2]="release security updates"
pockets[3]="release security updates"
pockets[4]="release security updates"
pockets[5]="release"

build_dep[0]="linux-source-2.6.15"
build_dep[1]="linux"
build_dep[2]="linux"
build_dep[3]="linux"
build_dep[4]="linux"
build_dep[5]="linux"

#
# Check that the release/arch pair exists in the releases[]/arches[] arrays.
#
function check_release_arch ()
{
RELEASE=$1
ARCH=$2
es=1
let index=0
for i in "${releases[@]}"
do
	if [ "$i" = "${RELEASE}" ]
	then
		for j in ${arches[${index}]}
		do
			if [ "$j" = "${ARCH}" ]
			then
				RELEASE_ARCH="${i}-${j}"
				es=0
			fi
		done
	fi
	let index=${index}+1
done

if [ "${es}" = "1" ]
then
	echo No record matches this release \(${RELEASE}\) and arch \(${ARCH}\)
fi

return $es

}

function get_pockets ()
{
RELEASE=$1

es=1
for i in "${releases[@]}"
do
        if [ "$i" = "${RELEASE}" ]
        then
		export POCKETS="${pockets[${index}]}"
		es=0
		break
        fi
        let index=${index}+1
done
return $es
}

#
# Return true if the input arch is considered a ports arch.
#
function ports_arch ()
{
ARCH=$1
if [ "${ARCH}" = "armel" ]
then
	es=0
else
	es=1
fi
return $es
}

